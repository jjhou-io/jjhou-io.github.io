<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>

<head>
<meta content="text/html; charset=big5" http-equiv="Content-Type">
<meta content="Microsoft FrontPage 3.0" name="GENERATOR">
<title>科技翻譯面面觀 — 從計算機領域談起</title>
</head>

<body background %22bgColor=-#ffffff%22%22 tppabs="http://jjhou.boolan.com/bgColor=%22#ffffff%22" text="#000000">

<hr>

<h2 align="center"><font color="#800000">科技翻譯面面觀</font></h2>

<h2 align="center"><small><font color="#800000"><small>— 從計算機領域談起 —<br>
</small></font></small></h2>

<h3 align="center"><font color="#800000">侯捷</font></h3>

<blockquote>
  <p align="center">本文發表於 <br>
  2002/02 台北《Run!PC》雜誌<br>
  2002/01 北京《程序員》雜誌</p>
</blockquote>

<hr>

<blockquote>
  <p>2001/12/08，侯捷應師範大學翻譯研究所之邀，做了一場開放演講。以下是內容摘要，以第一人稱敘述。</p>
  <p>●開場</p>
  <p>今天很開心來到這裡，和各位老師同學交換科技翻譯上的心得。請容我先花數分鐘介紹一下我自己，激發各位聽講的意願。我原本是一個計算機軟體技術人員，從純粹技術領域轉換角色，成為一個「文字工作者」，是我的生命中一個從無預期的轉彎。進入寫作和翻譯之前，我從來沒有文字工作經驗，也不曾對文藝有過特別的興趣。但是當我初次接觸技術性寫作和翻譯，我清楚知道這將是令我一輩子開心快樂的工作，從此改變了我的一生。興趣是多麼曼妙的事呀，可以一下子扭轉一個人30年的軌跡。我相信，花了這麼大力氣考上國內最高翻譯學府的各位高材生，一定也是出於強烈的興趣而選擇這條路。翻譯是一種<font
  color="#000000">半創造性</font>的工作，沒有強烈的興趣，不可能做得來，也不可能做得好。</p>
  <p>1990年至今，我的寫作與翻譯已經11個年頭，全職時間幾近10個整年。所有作品都在計算機相關領域內，80%是硬性專業技術，20%是軟性電腦散文（含書評、觀感、紀行），侯捷網站（<a
  href="javascript:if(confirm(%27http://www.jjhou.com/  \n\nThis file was not retrieved by Teleport Ultra, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://www.jjhou.com/%27" tppabs="http://www.jjhou.com/" target="_blank">http://www.jjhou.com</a>）完整記錄了這一路走來的歷程，也保留了相當多的電子成品。十年來大約累積 
  15 本著作，15 
  本譯作，以及上百篇軟性文章；硬性技術文章由於未留存下來，數量已不可考。就數量而言，這樣的成績還算不惡，人說「著作等身」，侯捷大約有「等腰」的高度了。通常創作者不太願意和「多產」二字掛邊，心態有待研究，可能是秉持「物以稀為貴」的觀念。不過「等腰」畢竟是10年的積累，實在也談不上傲人，僅止一般而已。</p>
  <p>90年起，我一直是個「創作歌手」，95 
  年翻譯了第一本書，才開展「翻唱歌手」的角色。這些年來，翻譯逐漸佔據我愈來愈多的工作份量。在這麼多年的經驗中，我累積了一些心得與想法，今天來和各位談談「面面觀」。</p>
  <p>請容我特別提醒，這次應邀到所演講，我談的並非翻譯技術，而是技術翻譯。師大翻譯研究所的同學，不論就<font
  color="#0000FF">外語能力</font>或<font color="#0000FF">翻譯理論</font>，肯定都比侯捷高明許多。老師的水平更不必提了，有報社的譯稿編審委員，有參加APEC會議的口譯專家，有英語系的資深教授。侯捷的英文程度在各位面前就像幼幼班一樣。很多人聽了這個會說，以你譯作15本的成績來看，這是謙虛之詞。不，侯捷向來不做過份的謙虛，有就是有，沒有就是沒有，我很實在。<font
  color="#000000">我能夠</font>翻譯十數本專業技術書籍，純粹因為有堅實的技術背景。</p>
  <p>由此之故，在眾多的語言、翻譯雙重專家面前，今天<font
  class="font3">我</font>抱著分享與學習的心情而來。我的長處在<font
  color="#000000">於</font><font color="#0000FF">領域技術</font>和<font
  color="#0000FF">中文能力</font>，我的特質在於<font color="#0000FF">勇敢創新和用心</font>。純粹因為這四點，使我能夠踏上翻譯之路。<font
  color="#000000">稍後我會說明</font>，關於科技翻譯，成功的要素在哪裡。</p>
  <p><font color="#000000">以下除非特別聲明，當我說到英文，我可能泛指</font><font
  color="#0000FF">外文</font><font color="#000000">；當我說到翻譯，往往是鎖定在</font><font
  color="#0000FF">科技翻譯</font><font color="#000000">；當我說到科技翻譯，往往我說的是</font><font
  color="#0000FF">計算機領域</font><font color="#000000">裡的觀察。而當我說到計算機領域的翻譯，我說的是</font><font
  color="#0000FF">書籍</font><font color="#000000">翻譯 — 
  現實業界對於單篇計算機技術文章的翻譯需求，不存在規模量。</font></p>
  <p>　</p>
  <p>● 翻譯的貢獻與地位 </p>
  <p>各位進入翻譯研究所，對於翻譯帶給國家社會人民的貢獻，不論是出於自己的認知，或是出於師長的耳提面命，一定都已知之甚詳。現今全球態勢以英語為主流，而我們並非英語系國家，翻譯之於我們的國際資訊流通，乃至國民的知識追求與素養提昇，更顯得重要。科技翻譯尤其如此。</p>
  <p>○《基度山恩仇記》原文版</p>
  <p>容我請問在場各位，誰讀過大仲馬的《基度山恩仇記》？我不敢做田野調查，所以各位不必舉手。假設有50%的人讀過。再請問，誰看過《基》書的原文本？估計不超過兩個人。</p>
  <p>那麼，小仲馬的《茶花女》呢？李察‧巴哈的《天地一沙鷗》呢？梅爾維爾的《白鯨記》、海明威的《老人與海》、歌德《少年維特的煩惱》、托爾斯泰的《戰爭與和平》、<font
  color="#000000">羅曼羅蘭的</font>《貝多芬傳》、但丁的《神曲》呢？誰又看過它們的原文本？</p>
  <p>這些書籍，很多人知道，很多人看過。因此，無庸多言，一個好的翻譯人才乃至一位大翻譯家，對於國家社會人民的貢獻，無遠弗屆，難以估計。民初嚴復先生翻譯了《天演論》，在動盪大時代中引導多少熱血青年救亡保種追求富強。當代中國翻譯界翹楚傅雷先生（1908~1966，鋼琴演奏家傅聰的父親）也翻譯了許多海外文學經典，對文藝和美學做出許多貢獻。</p>
  <p>翻譯是一座橋樑，沒有橋樑，那些缺乏撐竿跳絕技又不會游泳的群眾，沒有辦法到達彼岸。</p>
  <p>○中國歷史上最大的翻譯事業</p>
  <p>中國歷史上最大的翻譯事業，大概是佛典的翻譯。如果不是歷史上出了幾位傑出的佛典翻譯人才，將玄奘帶回來的梵文佛典翻譯為中土文字，佛教和佛學不可能如此廣泛地深入廣大民間。最著名的佛典譯師「四大天王」是玄奘、鳩摩羅什、法顯、真諦。稍後我有一個關於鳩摩羅什的傳奇故事，要與大家分享。</p>
  <p>○海峽兩岸最大的翻譯事業</p>
  <p>目前海峽兩岸最大的翻譯事業，桂冠落在「計算機相關書籍」上頭。不僅書種繁多，更迭快速，售價高昂，版稅或稿費也比一般文藝書籍高上許多。在臺灣，一本中文電腦技術書籍定價600元十分平常，1000元的天價也出現過。譯者的版稅普遍是10%，15%也聽說過。酬勞反應出市場利潤，我們可以推想計算機書籍的紅火程度。</p>
  <p>○必也定位清楚</p>
  <p>翻譯這檔事，針對不同的讀者群，需有不同的考量和不同的作法。今天既然談的是「計算機技術領域」的科技翻譯，讓我先將讀者定位清楚，才好談下去。</p>
  <p>我想基本上不會有人把「Windows 2000 
  使用指南」或「計算機基本概論」視為科技書籍，也不會有人把小學、中學、高中生看的電腦科普讀物視為「科技書籍」。因此，今天所談的計算機科技翻譯，我把讀者定位在大學和研究所程度。也許你沒有這樣的<font
  color="#0000FF">學歷</font>，但你有這樣的<font color="#0000FF">程度</font>，也算。</p>
  <p><font color="#000000">做為一個科技輸出量少於輸入量的國家，我們的科技教育的確需要仰賴良好的翻譯。請注意，我說的不是</font><font
  color="#0000FF">科技研發</font><font color="#000000">，而是</font><font
  color="#0000FF">科技教育</font><font color="#000000">。科技圈中最頂層的研究圈，並不存在翻譯的需求，但是教育圈亟亟需要大量的優質翻譯，以補國內嚴重貧血的高階技術讀物。高階技術讀物的讀者，一方面是國家未來科技研發的生力軍，一方面對於技術的本質，還在學習階段，對英文的掌握度，大多還沒能夠成熟到可以</font><font
  color="#0000FF">快速而精準</font><font color="#000000">地吸收國外成果。他們閱讀原文書或許問題不大，但不可能像閱讀中文書那麼快、那麼印象深刻、那麼有效率。</font></p>
  <p>另一個讀者群是業界工程師。工程師永遠在專案中無夜無日地走過365里路。雖然技術水平和外語能力可能比起學生時代成長許多，但由於時間受到擠壓，優質中譯本的出現對他們的求知仍然不啻荒漠甘霖。我對工程師的生活與需求太清楚了，因為我就是（仍然是）工程師，我週遭的許多朋友也都是工程師。</p>
  <p>這裡突顯一個問題：有英文閱讀能力的人，需要中譯本嗎？我相信中譯本對於絕大多數讀書欲望尚存的他們仍然有很大的吸引力，前提是一家值得信賴的出版社和一位值得信賴的譯者。（國外具規模的科技出版社都有「技術編輯」這樣的編組，扮演催生好書的關鍵角色，但在臺灣我還沒能幸運地看到過起真正作用的技術編輯。）</p>
  <p>　</p>
  <p>●目前的大環境</p>
  <p>大家都承認科技翻譯的重要和貢獻。貢獻理應和地位成正比，但是在臺灣，我對科技翻譯的感覺是「有貢獻，沒地位」。尤其計算機書籍翻譯，簡直到了地位淪喪的田地。你如果對別人說，你是一個同步口譯員，人家會承認你的專業，承認你的地位，尊敬你。你如果對別人說，你是一個計算機書籍譯者，人家嘴上會說「哇」，心裡頭則說「哦」。說「哇」是因為找不到適當的回應，說「哦」則是「原來如此」之意。所以你只聽過「口譯專家」這個敬稱，你聽不到「計算機翻譯專家」或「科技翻譯專家」這樣的敬稱。</p>
  <p>這其中最大的原因是，前人把事情做壞了，做爛了，整個圈子成了醬缸。計算機翻譯書籍是所有書籍中最有基本市場、單價最高、又最輕率推出的一個書種。前兩者很容易理解，因為計算機科技最是紅火，最是日新月異。但為什麼最輕率推出呢？因為理應由專業人士執筆的工作，卻<font
  color="#0000FF">以一群毛頭小伙子為翻譯主力，又沒大人把關</font>。計算機的進展太快，令業者每在「過時與庫存」的壓力之間徘徊無奈，不敢給譯者充裕的時間完成作品。另一方面又由於有基本市場撐腰，因此睜一眼閉一眼地把某些只具讀者實力的人，錯放到譯者的位置，再把這麼胡里胡塗完成的作品出版給其他讀者看。大學生、研究生、兼差打工，就是業者最好的「儲備人才」。如此<font
  color="#0000FF">「譯者共讀者一色，鈔票與臭名齊飛」</font>，造就出<font
  color="#0000FF">「學生譯書給老師看，小孩譯書給大人看」</font>的奇怪現象。（計算機中文書，大學教授大概不看，但是專科高職老師可能會看，會用來教學）。</p>
  <p>從實際作品觀之，顯然有太多譯者，面對他所翻譯的技術主題，和他的讀者一樣陌生（甚至更陌生）。此外，經歷十數年「科技與人文分離」、「獨尊智育尤尚理工」的環境薰陶之後，有多少年輕人具備堪讀的文筆，可譯出堪讀的文句，實在大有疑問。<font
  color="#000000">關於這個，稍後讓我舉些例句娛樂各位嘉賓</font>。</p>
  <p>書籍的演進更迭過快、翻譯主力的年紀過輕歷練過淺、業者的短視…，這些因素使得十數年下來整個計算機翻譯界繳出遠低於60分的成績。在惡性循環、劣幣驅逐良幣的情況下，優秀人才不願投入，更加深了環境的惡劣。甚至譯了本書卻躲躲閃閃不敢讓人知道。利之所趨，更有極端惡劣的業者變本加利地製造垃圾，甚至坑殺年輕學子的純真。</p>
  <p>幸好，情況有好轉跡象。惡劣的業者倒閉了，惡劣的書籍開始有了大量的批評（感謝網絡）。愈來愈多的「道」書（Design 
  Patterns, Refactoring, Programming Pearls...）和深度的「器」書被有膽熟有眼光的業者邀請一批好人才翻譯出版。</p>
  <p>最糟的環境，讀者需要最好的選擇；最糟的環境，對優秀人才是最好的機會。眾人皆醉之中尤其顯出「我獨醒」的可貴。過去以來大家都在<font
  FACE="新細明體" size="3" color="#000000">矮人國裡找高個子</font><font
  color="#000000" size="3">，今天真正的</font><font FACE="新細明體" size="3"
  color="#000000">高個子到矮人國去，</font>不是一下就鶴立雞群所向披靡了嗎？惡劣的環境不是優秀人才的阻力，正是絕佳的機會。台下各位翻譯界的精英，如果你們想走科技翻譯這條路，恰逢其時。</p>
  <p>　</p>
  <p>●計算機圖書翻譯的盲點</p>
  <p>究竟是什麼盲點，造就了目前的窮山惡水？&nbsp;</p>
  <p>太過相信 title 
  威力，是業者的盲點。總有一堆人以為掌握了好的外文書，就保證了中譯本市場。甚至以為取了個好書名，就保證了市場。有的業者甚至抱持<font
  FACE="新細明體" size="3" color="#000000">『好 title 
  不怕他們不買』的心態，與讀者站在敵對的立場 — 
  天作孽猶可活，自作孽不可活呀，那不是倒閉了嗎！</font></p>
  <p>好的原作固然對讀者是絕大的吸引力，但如果交給不夠格的譯者，譯作就成了廢物，甚至可能成為毒物。這方面讀者過大的寬容，又鼓勵了草率出書的風氣。有一封來信最令我印象深刻，<font
  color="#000000">讀者說</font><font color="#8080FF">『總而言之，xxx 
  出版社當年的特點是大量翻譯，草草出版，讓科技人員能夠儘快讀到優秀作品。這種作風顯然已經不合時宜了，或者說它已經完成了它的歷史使命。』</font><font
  color="#000000">我的天，「草草出版」還能夠讓人「儘快讀到優秀作品」嗎？還說到歷史使命呢！</font></p>
  <p><font color="#000000">這樣的出版社海峽兩岸各有代表，臺灣代表已經結束了生命，大陸代表還在欣欣向榮。讀者的溫良恭儉讓完全用錯了地方。</font></p>
  <p>譯者這邊的盲點在於過度高估自己，低估影響。計算機領域裡頭很多人對翻譯感興趣，尤其聽說某某同學某些同事接了個case，更是興致勃勃。但是做過一次或做了一半之後抱怨不已的大有人在：太辛苦、付出與酬勞不成比例。有正義感的人不願意和稀泥，又不願意接受落差，選擇離開。沒有責任感的人，繼續把翻譯當生活補貼，選擇麻木，和一個筆名（我看過一個筆名是吳其仁）。</p>
  <p><a name="mark1">面對技術翻譯，一般人最常見的幾個盲點是</a>：</p>
  <p>(1) 
  以為「自己懂」和「讓別人懂」是一樣的。兩件事說起來相差十萬八千里。「自己懂」是領域專業技術層次，「讓別人懂」則是組織和文字功力，是另一種專業。最近我收到一封讀者來函，他算是開悟了：<font
  color="#8080FF">『學校每年都要搞一個學生論文比賽，為了測一測我對STL的熟悉程序，我寫了一篇介紹STL的文章去參賽。寫到Traits技術的時候，突然卡住，寫不下去了。原以為已經理解了 
  Iterator&nbsp; Traits，一寫文章才「看到自己的盲點」，趕緊去把 
  [Austern98] 第3章和您的《芝麻開門 ─ 從Iterators談起》以及《大局觀：泛型程式設計與STL》再仔細研讀一遍，又寫了200行左右的測試代碼，這才弄懂了Iterator 
  Traits，文章也得以繼續寫下去。我這才體會到讀者和作者的區別。自己弄懂和把別人講懂完全是兩個層次。』</font></p>
  <p>(2) 
  以為技術翻譯就等同於技術，所以『我的技術比他好，我做技術翻譯也一定比他好』，『他能做，我也一定能做』。這個盲點和上一個一樣，沒有體會專業技術的翻譯（和寫作）本身就是另一種專業。</p>
  <p>(3) 
  對文字表達能力抱持錯誤的樂觀。太多人認為，中國人有不會說中國話的嗎？會說中國話有不會寫中文字的嗎？會寫中文字有表達不出意思的嗎？若依此理，每個有點自己想法的人都可以成為作家！然則為什麼作家這麼少？會寫字不見得會寫文章，拿毛筆寫字不都是書法。在計算機翻譯書市場上，有許多由一堆中文字組合起來的非中文書，很多人都說，遇上那種書，把每個字忠實轉為英文，也就湊合看懂了。</p>
  <p>(4) 對工作時程抱有錯誤的預期。不知怎麼地，1000個人裡頭有999個把翻譯視為兼差。『一天譯10頁，300頁的書一個月搞定，哈哈，簡單。』我曾經把一本書的某一小部分請工程界朋友先做初譯。最後評量他的進度，一天不到一頁，這還只是初譯。這種情況並非特例。一旦時間嚴重不足，進度完全偏離預期，往往就是虎頭蛇尾草草作收。做出來的東西，級次也就可以想像。part 
  time 
  不是原罪，但是錯誤的預估造成草草的結束，讓懵懂無知的讀者努力把你製造的毒物吃下去，就是莫大的罪惡。</p>
  <p>所有的問題都可歸於「短視」與「漠視」。業者想要撈一票，譯者也想要撈一票，品牌與形象被人丟在一旁。人人都知道IBM電腦比較貴，BMW汽車比較貴，即使不買也覺得它貴得有理。這種思考卻沒多少人放在計算機書籍上。然而我要告訴各位，任何人建立了品牌，就可以從品牌中取回辛苦付出應得的報酬。業者如此，譯者也如此。眼光放遠，計久長，才能成就事業 
  — 
  真正的事業，受人尊敬的那種。如果你認為個人不可能隻手扭轉大局，那是因為你做的不夠好，做的不夠多，做得不夠出名。</p>
  <p>　</p>
  <p>●科技翻譯使命之我見</p>
  <p>有些朋友談翻譯，一下子就上綱到文化。科技翻譯和文化傳承有什麼關係呢？我不清楚，也不以為意。</p>
  <p>我認為，翻譯一本技術性書籍，最重要的工作是讓讀者儘可能把所有時間花在技術的學習上，避免任何其他精神消耗。下面這幾個句子會嚴重地把讀者的時間消耗在拆解句型上面（如果你能拆解正確，英文功底和技術功底都算不弱了）：</p>
  <p>⊙C++ Primer, 3e, p443<br>
  <br>
  <font face="Verdana"><font color="#C0C0C0">A typedef name provides an alternative name for 
  an existing data type; it does not create a new data type.</font> <font color="#000000">Therefore, 
  two function parameter lists that differ only in that one uses a typedef and the other 
  uses the type to which the typedef corresponeds are not different parameter lists.</font><br>
  </font><br>
  <font color="#000000">⊙C++ Primer, 3e, p559<br>
  <br>
  <font face="Verdana">The process by which compound statements and function definitions 
  exit because of a thrown exception in the search for a catch clause to handle the 
  exception is called stack unwinding</font>。<br>
  <br>
  ⊙C++ Primer, 3e, p730<br>
  <br>
  </font><font COLOR="#969696" face="Verdana" size="3">[code..] where the conditional test 
  if (this != &amp;rhs) prevents assigning a class object to itself.</font><font
  color="#000000"><font face="Verdana"> This is particularly inappropriate in a copy 
  assignment operator that first frees a resource currently associated with the class in 
  order to assign the resource associated with the class being copied.<br>
  </font><br>
  </font>省下讀者看原文書時拆解句型的時間，俾使他們得以專心致志地研究文中的技術內涵，俾使他們得以快速（比閱讀原文快五倍十倍地）進入書中領域並吸收其中知識。是為科技翻譯之功。</p>
  <p>我一點也不認為，科技翻譯需要多麼「<font color="#0000FF">快速</font>引進高科技」。研究圈不需要翻譯，教育圈才需要。想要即時獲得國外最新技術進展的人，應該去看原文讀物（想必他們也只看原文讀物）。當技術被寫入書中，其實已經不新，這時候我寧願它在譯者手上多花個一年半載，把品質做好。品質提昇可以節省讀者原本需要花費的（閱讀原文書的）二分之一乃至三分之二的時間，那才是「快速」的真正意義所在。</p>
  <p>另一個常被大家認定的科技翻譯使命就是：吸收外國的技術，在國內生根。這是任何人都同意的宗旨。看到「生根」，有人認為應該全中文化，那就牽扯到術語該不該中文化的問題了。讓科技<font
  color="#0000FF">內涵</font>完全被國人吸收，是為紮根，是為生根，但是科技生根和術語中文化，我認為18竿子也打不著。</p>
  <p>　</p>
  <p>●科技術語處理方式之我見</p>
  <p>術語處理方式是科技翻譯的一個大爭議點，計算機領域中爭議尤烈，因為計算機領域的術語太多了，並且繼續快速增多之中。科技術語該如何處理？全中文化？第一次出現時中英並陳？時而中英並陳？處處中英並陳？全英文化？</p>
  <p>就這個問題，我以為，完全要從讀者的角度思考。你做的是科普讀物或是專業讀物？如果是科普讀物，我贊成術語全盤中文化，必要時附加原文。如果是專業讀物，我贊成某些術語以原文為主述方式，必要時附加中文譯詞，最好再補個英中對照表。</p>
  <p>我曾經大膽地在譯作中保留大量的英文術語（並且延續至今），規模之多前所未見，引起極大迴響。從翻譯界來的迴響，有贊成有不贊成；從讀者來的迴響，99%贊成（也許不贊成的都沒寫信給我 
  :)）。我之所以敢這麼做，因為我就是計算機專業領域中的內行人，清楚知道業內人士使用什麼樣的溝通型式。有如此的信心做後盾，我才敢做逆行者和先行者，有如此的實力做後盾，我才敢決定哪些術語保留原文，哪些術語中譯（我得坦誠，挑選是一個極痛苦的過程）。</p>
  <p>另一方面，這麼做也存在個人的理想性：我不能眼看國家未來的科技生力軍，因為術語的不當使用，而使自己與業界乃至於將來必然要接觸的原文技術資料脫節。這一點大陸的情況相當嚴重，大陸的計算機教育是『儘可能把一切英文術語翻譯成中文』，這是大陸研究生寫來的信中說的，也是赴上海發展數年的朋友說的，也是與大陸讀者大量交流之後的我的親身感受。</p>
  <p>原文術語的保留，涉及另一個燙手山芋：版面。過多的中英夾雜會使版面破碎，不忍卒睹。這有賴反覆修潤、全盤計議，並且運用字形來改善，需要譯者和版面完成者共同解決。但是往返協調的成本非常高，所以除了譯者自行排版，我不知道還有什麼好辦法。排版不在翻譯範圍內，很多譯者對此毫無興趣，但我甘之如飴，因為我關心最終結果。我不希望我的翻譯功虧一簣於版面。版面會嚴重影響學習效果，相信大家都有同感。</p>
  <p>關於術語，我的朋友曾銘源先生（現任紐約 CA高階主管）一席話最令我讚賞：</p>
  <font color="#ff0000"><p></font><big><font color="#0000FF">Terminology only makes sense to 
  people in that particular field, why bother to give it another alias</font> (Chinese 
  translation)? Let me give you a example: A while back, I interviewed a candidate straight 
  from Mainland China, since we cannot communicate well in English, we used Chinese instead. 
  However, I cannot understand a lot of computer terms he used. This was because same 
  terminology being given different alias (translations) in Taiwan and China.</big></p>
  <p><big><br>
  </big><br>
  ●術語翻譯之我見</p>
  <p>術語的處理，可說是評定譯者是否為行內人的第一關。下面有一些娛樂節目：</p>
  <table border="1" width="96%">
    <tr>
      <td width="100%">class library：等級庫存。（班級圖書館？）<br>
      <br>
      message cracker ：訊息爆裂子&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; （crack=爆裂？er=子？crack+er=爆裂子？）<br>
      <br>
      in-line assembly debug：偵錯網際組合中的語言程式碼 &nbsp; &nbsp;&nbsp;&nbsp; 
      （不知如何笑起）<br>
      <br>
      我已經嘗試將<font color="#0000FF">樣本應用</font>獨立於另一<font
      color="#0000FF">樣本應用</font>之外&nbsp;&nbsp;&nbsp;&nbsp; （sample application？）<p>web 
      server：韋伯伺服器 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      （和大陸的「因特網」足以一別苗頭）</td>
    </tr>
  </table>
  <p>下面還有一些對術語的認定過猶不及的例子：</p>
  <table border="1" width="97%">
    <tr>
      <td width="100%">在 1993 年 7 月 27 日我生日這天，Windows NT 
      小組給我一個作者所能得到的最佳禮物：他們發佈了 Windows NT <font
      color="#0000FF">要製造 (manufacturing)</font> 的消息。<br>
      <br>
      Windows NT Executive <font color="#0000FF">規範 (regulate) </font>所有這些次系統的記憶體配置 
      (memory allocation)，線串，檔案，與其他資源。<br>
      <br>
      記住，當我在敘述中更加詳論時，我絕對是<font color="#0000FF">製作相關的 
      (implementation dependent)</font> --- 我是在討論 Win32 API 的 Windows NT 製作。Win32 
      API 的其他製作則以不同方式製作了一些 Win32 函式。<br>
      <br>
      錯誤檢查應該是任何軟體專案的一大部份。不幸的是，適當的錯誤檢查會引起 
      軟體專案的<font color="#0000FF">大小 (size)</font> 與<font color="#0000FF">複雜度 
      (complexity)</font> 爆炸性地增長。<br>
      <br>
      我喜歡說所有的樣本程式都<font color="#0000FF">沒有錯誤 (bug free)</font>。但是，...</td>
    </tr>
  </table>
  <p>我所定位的科技翻譯對象，處處存在著術語，因此，雖然我贊成保留關鍵術語，但相當程度的其他術語還是需要翻譯的。我對術語譯名遵循兩大原則：(1) 
  儘量選用二字詞 (2) 
  儘量有「突出性」。前者唸起來乾淨俐落漂亮，後者使術語看起來像個術語，不和一般用語混淆（避免不當耗費讀者的時間）。</p>
  <p>以下列出兩岸計算機術語數個（Object Oriented 
  領域），各位不妨就上述兩點自行評斷優劣：</p>
  <table border="1" width="64%">
    <tr>
      <td width="28%" bgcolor="#C0C0C0">英文術語</td>
      <td width="34%" bgcolor="#C0C0C0">大陸譯名</td>
      <td width="38%" bgcolor="#C0C0C0">臺灣譯名</td>
    </tr>
    <tr>
      <td width="28%">class </td>
      <td width="34%">類</td>
      <td width="38%">類別</td>
    </tr>
    <tr>
      <td width="28%">type</td>
      <td width="34%">類型</td>
      <td width="38%">型別</td>
    </tr>
    <tr>
      <td width="28%">object</td>
      <td width="34%">對象</td>
      <td width="38%">物件</td>
    </tr>
    <tr>
      <td width="28%">pass by reference</td>
      <td width="34%">傳引用</td>
      <td width="38%">傳址 <strong><font color="#0000FF">*</font></strong></td>
    </tr>
    <tr>
      <td width="28%">dereference</td>
      <td width="34%">解參考</td>
      <td width="38%">提領 <strong><font color="#0000FF">*</font></strong></td>
    </tr>
    <tr>
      <td width="28%">pattern</td>
      <td width="34%">模式 <strong><font color="#FF0000">*</font></strong></td>
      <td width="38%">樣式<strong><font color="#0000FF"> *</font></strong></td>
    </tr>
    <tr>
      <td width="28%">program</td>
      <td width="34%">程序</td>
      <td width="38%">程式</td>
    </tr>
  </table>
  <p><small><strong><font color="#0000FF">*</font></strong> 
  這是侯捷喜歡的譯法，並非臺灣普遍都這麼譯。其中「傳址」以意譯為重，非僅字面價值。</small><br>
  <small><strong><font color="#FF0000">*</font></strong> 
  「模式」讓你聯想到哪些個字？</small></p>
  <p>此外，共同性質的術語之間，如果其譯名能夠存在「族群性」，那是最好。讓我再列兩岸計算機術語數個，各位自行評斷優劣：</p>
  <table border="1" width="69%">
    <tr>
      <td width="29%" bgcolor="#C0C0C0">英文術語</td>
      <td width="28%" bgcolor="#C0C0C0">大陸譯名</td>
      <td width="43%" bgcolor="#C0C0C0">臺灣譯名</td>
    </tr>
    <tr>
      <td width="29%">software</td>
      <td width="28%">軟<font color="#0000FF">件</font></td>
      <td width="43%">軟體</td>
    </tr>
    <tr>
      <td width="29%">hardware</td>
      <td width="28%">硬<font color="#0000FF">件</font></td>
      <td width="43%">硬體</td>
    </tr>
    <tr>
      <td width="29%">control</td>
      <td width="28%">控<font color="#0000FF">件</font></td>
      <td width="43%">控制元件，控制元</td>
    </tr>
    <tr>
      <td width="29%">component</td>
      <td width="28%">組<font color="#0000FF">件</font></td>
      <td width="43%">組件</td>
    </tr>
    <tr>
      <td width="29%">singleton</td>
      <td width="28%">單<font color="#0000FF">件</font></td>
      <td width="43%">（未知）</td>
    </tr>
    <tr>
      <td width="29%">firmware</td>
      <td width="28%">固<font color="#0000FF">件</font></td>
      <td width="43%">韌體</td>
    </tr>
    <tr>
      <td width="29%">class </td>
      <td width="28%">類</td>
      <td width="43%">類<font color="#0000FF">別</font></td>
    </tr>
    <tr>
      <td width="29%">type</td>
      <td width="28%">類型</td>
      <td width="43%">型<font color="#0000FF">別</font></td>
    </tr>
  </table>
  <p>所有的規範都有例外，有照顧不到的地方。規範是死的，你是活的，你的讀者也是活的。好的譯者不能死死地墨守成規。</p>
  <p>關於術語的翻譯，除非是技術引進者，否則我們少有機會開創（或改用）自己喜歡的譯名，大多數也就從眾了，從俗了。不過，我的脾氣是這樣：當我累積了足夠的影響力，我會設法改變我不滿意的世界。龍成了形，就該現爪，不然還是像條蛇。</p>
  <p>　</p>
  <p>●兩岸術語統一之我見</p>
  <p>誰都希望看到這一點，但我對結局悲觀。兩岸計算機術語的差異，已經到了彼此看不懂對方計算機書籍的程度了。差異如此之大，怎麼統一？下面是數個對照例子：</p>
  <table border="1" width="69%">
    <tr>
      <td width="32%" bgcolor="#C0C0C0">英文術語</td>
      <td width="34%" bgcolor="#C0C0C0">大陸譯名</td>
      <td width="34%" bgcolor="#C0C0C0">臺灣譯名</td>
    </tr>
    <tr>
      <td width="32%">object oriented</td>
      <td width="34%">面向對象</td>
      <td width="34%">物件導向</td>
    </tr>
    <tr>
      <td width="32%">file</td>
      <td width="34%">文件</td>
      <td width="34%">檔案</td>
    </tr>
    <tr>
      <td width="32%">default</td>
      <td width="34%">缺省、默認</td>
      <td width="34%">預設</td>
    </tr>
    <tr>
      <td width="32%">hash table</td>
      <td width="34%">哈希表、散列表</td>
      <td width="34%">雜湊表</td>
    </tr>
    <tr>
      <td width="32%">array</td>
      <td width="34%">數組</td>
      <td width="34%">陣列</td>
    </tr>
    <tr>
      <td width="32%">list</td>
      <td width="34%">鏈表</td>
      <td width="34%">串列</td>
    </tr>
    <tr>
      <td width="32%">data</td>
      <td width="34%">數據</td>
      <td width="34%">資料</td>
    </tr>
  </table>
  <p><a name="terms">由於我的作品在大陸有影響力</a>，我曾經希望對某幾個我認為最需修改的大陸術語起修改作用。但是大陸讀者在這方面的彈性非常低。這使我認為，我這麼做沒有意義。所以我已經決定放棄對侯捷作品的大陸譯本提供任何關於術語上的意見，<big>let 
  it be</big>。</p>
  <p>我要提醒各位（也提醒我自己），看待異己世界，不要懷有敵意，更不要總以自我為中心。金庸小說呈現的這種漢民族自省思想，是我以為其最高價值之所在。</p>
  <p>我個人很願意在自己的作品中斟酌採用其他譯者的好譯名或高明的大陸譯法，例如 
  <font color="#0000FF">programming</font>，臺灣譯為「程式設計」，但現在大多數時候我都說「編程」，這是大陸用語。例如 
  <font color="#0000FF">overloading</font>，以前我都說「多載化」，現在我也願意接受「重載」；這兩個字的語氣（語感）不同，我在不同的情境下挑選使用。又例如 
  <font color="#0000FF">refactoring</font>，臺灣說「重整」，我更傾心於大陸的「重構」。我的前後期作品可能會出現不同（但相近）的譯名，對於「不一致」的質疑，我並不以為意，只要同一本書中一致，就好了。社會在進步，大家都在進步，我的作品也要按我的方式進步。</p>
  <p>當然，也有一些我雖心儀卻無法採用的譯詞，例如<font color="#0000FF"> 
  internet</font> 
  大陸稱「互聯網」，香港稱「萬維網」，我覺得都勝於臺灣的「網際網路」。但是我無法改而使用它，因為這是一個太根深蒂固的名詞。多少因為這一點意識，使我決定不再干涉我的書籍（內的術語）在大陸的轉譯結果。</p>
  <p>除了術語之外，兩岸分治五十年所導致的語言演化，更使一些想像不到的小地方有著相反的意義，遣詞用字不可不慎，例如：</p>
  <table border="1" width="100%">
    <tr>
      <td width="9%" bgcolor="#C0C0C0">中文</td>
      <td width="30%" bgcolor="#C0C0C0">大陸說法</td>
      <td width="32%" bgcolor="#C0C0C0">臺灣說法</td>
      <td width="29%" bgcolor="#C0C0C0">註解</td>
    </tr>
    <tr>
      <td width="9%">緊張</td>
      <td width="30%">年節車票很緊張</td>
      <td width="32%">年節車票很難買</td>
      <td width="29%">臺灣的「緊張」只用於情緒形容。</td>
    </tr>
    <tr>
      <td width="9%">　</td>
      <td width="30%">上海的住房很緊張</td>
      <td width="32%">（房價很高或很難購買之意）</td>
      <td width="29%">　</td>
    </tr>
    <tr>
      <td width="9%">感冒</td>
      <td width="30%">意思是「感興趣」</td>
      <td width="32%">意思是「不滿」</td>
      <td width="29%">兩岸的「感冒」意義褒貶完全相反。</td>
    </tr>
    <tr>
      <td width="9%">比較</td>
      <td width="30%">A書偏學術，B書偏實用，但B書還是比較好的。</td>
      <td width="32%">A書偏學術，B書偏實用，但B書（在同類書中）還算是滿好的。</td>
      <td width="29%">本例B並無和A一計高下之意，大陸的「比較」在臺灣的意思是「頗為」。</td>
    </tr>
    <tr>
      <td width="9%">水</td>
      <td width="30%">意思是灌水、沒內容。</td>
      <td width="32%">意思是「漂亮」。臺語轉化而來。</td>
      <td width="29%">兩岸的「水」意義完全相反。</td>
    </tr>
  </table>
  <p>　</p>
  <p>●兩岸計算機科技譯本之我見</p>
  <p>翻譯書籍的數量那麼多，良窳不齊是永遠的景觀。你不可能期待全面優質化，正如太陽底下永遠有陰影。</p>
  <p><font color="#0000FF">出版社的品牌必須以作（譯）者的品牌為基礎</font>，有心經營科技翻譯這塊市場的業者必須有這樣的認知。書的靈魂人物是作者和譯者。除非面對Addison 
  Wesley 或Oreilly這種好書比率極高的出版社，否則，我們所談的科技譯書，其<font
  color="#0000FF">成熟讀者</font>是不認出版社的，他們只認作者和譯者。兩岸計算機出版社和 
  Addison Wesley 或Oreilly 
  之間的距離，實在無法量測出來；至於作（譯）者品牌，臺灣在多個分支領域中已各有引領風騷者，大陸尚待多多努力。</p>
  <p><font color="#0000FF">成熟的讀者</font>不認出版社，也不認所謂的套書。《深入淺出》賣得好，市面上就出現一大堆「深入淺出」，《深度探索》賣得好，市面上就出現一大堆「深度探索」；書名本身不錯，大家都可以用，但如果名實不符只為了搭個便車，這種思維就非常可笑。朋友建議我，應該為自己的書籍取一個叢書名稱，對此我從不放在心上。每本書都取類似的名稱，無趣透了。臺灣把阿諾史瓦辛格主演的所有電影統統譯名為「魔鬼XXX」，把湯姆克魯斯主演的所有電影統統譯名為「捍衛XXX」，把<font
  color="#000000">布萊德彼特</font>主演的所有電影統統譯名為「火線XXX」，最是搞笑。我看過一部電影原名 
  <big>Seven</big>，香港譯為「七宗罪」，非常好，貼切電影主題，臺灣的譯名是「火線追緝令」，怎麼回事？因為男主角是<font
  color="#000000">布萊德彼特</font>。</p>
  <p>經營科技翻譯的出版業者，一定要清楚一點：你們所面對的讀者是什麼樣的水平。意義缺缺、近乎跳樑的事，就別做了。</p>
  <p>關於計算機科技翻譯書籍的良窳比率，由於缺乏實際數據，很難就兩岸現況做比較。基本上一個是半斤，一個是八兩。值得注意的是，大陸過去黃沙滾滾，最近一年卻繁花似錦，引進一大堆計算機名著，titles 
  列出來令人吃驚。市場可期者，桃李不言下自成蹊，但竟連《The Art 
  of Computer Programming》和《The Designing and Evolution of C++》也有。光就選題而言，很叫臺灣讀者羨慕。至於實際翻譯品質，我不敢樂觀預期 
  — 
  不曾好好培養過計算機翻譯人才，不曾重視計算機翻譯人才，也從來少有譯者在此領域經營，一下子蹦得出這麼多夠格的譯者嗎？翻譯本身是一種專業，並非計算機教授或計算機博士就一定能夠勝任。根據耳聞與實證經驗，請來的教授愈知名，譯書的品質愈堪虞。太多知名教授並不把翻譯當回事，他會交給他的徒子徒孫去做，親自看上兩眼者幾稀。</p>
  <p>大陸的這一波高階計算機書籍的引進風潮中，我觀察並思考了幾個問題：</p>
  <p>(1) 
  書籍總是只有一個翻譯授權，因此好書一旦被譯壞，讀者就別想再有好譯本可讀，造成的荼害將長期而絕對。一窩蜂搶進，又沒有足夠製作能力的話，帶給讀者的是傷害而非幸福。譯權的爭奪很傷資本，小社爭不過大社，大社又消化不良，非讀者之福。大陸有些中譯本，已經被罵到爛了，還是永據排行榜（一方面新手實在太多，一方面沒有選擇，一方面是<font
  color="#000000">讀者的溫良恭儉讓用錯了地方）。</font></p>
  <p>(2) 
  由於經濟與管道雙重因素，大陸讀者普遍無法接觸原版書，因此對於譯本的品質無法做「信」的比較和評論。只能從「達」「雅」兩面觀之。但是科技譯書必先以「信」為根據。如果遇到刀俎型的出版社和譯者，讀者就成魚肉了。</p>
  <p>(3) 
  由於資訊閉塞的緣故，太多人認不清楚書籍的定位。對書籍的認識僅止於書名（<font
  color="#0000FF">註</font>）。不少人以為《Thinking in C++》必定優於《C++ 
  Primer》（入門怎能和思想比高 :)），又以為《The Art of Computer 
  Programming》是用來增進編程功力達藝術境界的書，網路上人人雀躍人人都想買一本。殊不知，就連許多計算機教授讀這本盡是數學的演算法專書都感吃力。</p>
  <table border="1" width="100%">
    <tr>
      <td width="100%"><font color="#0000FF">註</font>：這裡似乎有個矛盾。我一方面說計算機技術書籍的讀者大多<font
      color="#000000">成熟，一方面又說</font>太多人認不清楚這些計算機書籍的定位。原因是programming在大陸成了經濟與國力發展之所繫，成了全民運動，是去貧脫困的希望。極端總是會帶來走樣。</td>
    </tr>
  </table>
  <p>(4) 
  大陸缺乏專業書評（臺灣也非常短缺），網絡論壇上都是零星砲，而且其中幾乎都只有感情的陳述，沒有具體的實證。缺乏制衡能力，接踵而來的就是腐化。</p>
  <p>(5) 
  出版社的眼界還不夠。固然整體來看有很棒的書入選，但也有些書品實在不必引進。從大局觀之，不論哪個層次，最頂級的書才值得翻譯，其他資源還是投注在本土技術寫作人才的培養吧，對國家社會的貢獻大一些。</p>
  <p>無論如何，沒有起始，就沒有進化。比起臺灣的選題層次，大陸這次大動作還是令人期待的。</p>
  <p>臺灣這邊也有好消息，由於不景氣的緣故，讀者學會了精打細算，也學會了為生涯規劃投資。因此高階計算機書籍在市場上成了中流砥柱，一些努力付出的出版業者獲得了鼓勵，讀者、譯者、業者彼此終於進入了一個善性循環。諸如《Design 
  Patterns》、《Programming Pearls》、《Refactoring》這樣的書陸續開工或完成了，翻譯品質和製作品質在在可見用心。臺灣市場遠遜於大陸市場，業者的辛苦可以想見，引進這些好書並精益求精，侯捷十分敬佩。</p>
  <p>　</p>
  <p>●中文先天條件不足之我見</p>
  <p>關於翻譯，我認為中文存在數個先天缺憾，這些缺憾在科技領域中裂成了數個大峽谷。科技講究精準，而中文的這幾個先天缺憾都和精準度有關。</p>
  <p>(1) 單數 / 
  複數。一般我們不太在乎，但有時候為了精準，必須表現出來。中文要表現複數，可用「們」。但是「物件們」實在太可笑（我真的曾經這樣實驗過）。通常我的作法是這麼表達：編譯器<small>(s)</small>。這當然不中不西，但我不管，只要讀者清楚知道我要表達什麼，而且版面不醜（注意，<small>(s)</small> 
  要小兩號），他們不會排斥我的「創意」。</p>
  <p>(2) 主動 / 
  被動。這個比較容易解決，加一個「被」字就可以了。但是像這樣：</p>
  <table border="1" width="100%">
    <tr>
      <td width="100%">When this function is called, it is passed the handle of the window that 
      finished processing message and the message value in the first two parameters.<br>
      <br>
      當這函式被呼叫時，它<font color="#0000FF">被傳遞</font>已經完成處理前 
      2 個參數中的訊息與訊息值之視窗的處理指標。</td>
    </tr>
  </table>
  <p>就是完全失敗的例子。是的，中文很少用被動式，使用被動式時，一定要調整語句結構。還有，上面這個句子屬於娛樂節目，譯者肯定完全不知道自己在寫什麼<font
  color="#000000">。改譯成這樣就好多了：</font></p>
  <table border="1" width="100%">
    <tr>
      <td width="100%">當這個函式被呼叫，它的第二個參數放的是訊息本身，而第一個參數放的則是處理該 
      訊息之視窗的 handle 值。</td>
    </tr>
  </table>
  <p>(3) 動詞&nbsp;/名詞。這個困擾最大。需要多加輔助文句或符號，考驗譯者的文字功力。下面是個例子：</p>
  <table border="1" width="100%">
    <tr>
      <td width="100%">原文：Delegation is a good design choice only when it simplifies more 
      than it complicates. <p>原譯：只有當委託使設計比較簡單而不是更複雜時，它才是好的選擇。<br>
      <br>
      侯譯：只有當 delegation 簡化了設計，它才值得被我們選用。</td>
    </tr>
  </table>
  <p>另一個例子：</p>
  <table border="1" width="100%">
    <tr>
      <td width="100%">原文：To achieve the same effect with delegation, the receiver passes 
      itself to the delegate to let the delegated operation refer to the receiver.<p>原譯：委託方式為了得到同樣的效果，接受請求的對象將自己傳給被委託者（代理人），使被委託的操作可以引用接受請求的對象。<br>
      <br>
      侯譯：為了以委託方式獲得相同效果，「請託（request）受理者」將自己傳給被委託人，使自己得以讓「被委託之操作行為」取用。&#11;</td>
    </tr>
  </table>
  <p>對於上述結果，我並不滿意。我最希望的譯法是：</p>
  <table border="1" width="100%">
    <tr>
      <td width="100%">為了以 delegation 獲得相同效果，receiver 將自己傳給 
      delegate ，使自己得以被 delegated operation 取用。</td>
    </tr>
  </table>
  <p>不中不西是嗎？又何妨。英文單字不懂，查一下字典就有了（也許書後有個帶簡短解釋的術語表呢）。科技譯本內適當地出現英文字，我認為反倒多了一種視覺效果，提醒你這是一個術語。當然，一切都需拿捏分寸。<br>
  <br>
  </p>
  <p>●科技翻譯信達雅之我見</p>
  <p><font color="#000000">下面是一封讀者來信：</font><font color="#8080FF">『有個問題越來越困擾我。因此想向老師討教。翻譯追求信﹑達﹑雅。學生現在的水平﹐不敢言“雅”﹐只能盡心盡力保證忠實原著﹐再力求讓讀者容易理解。但是在這個地方就有一點困惑﹕“忠實原著”應該忠實到什麼地步﹖逐字譯是肯定不行的﹐那麼逐句﹖逐段﹖譯者應該對原著做多少修改﹖如何修改﹖請問老師如何把握這個尺度﹖』</font></p>
  <p>信達雅一向被翻譯界視為圭臬。這三個無上目標是：</p>
  <p>信：忠信、忠於原文 <br>
  達：譯文句子通順易明<br>
  雅：用字優雅</p>
  <p>我認為，科技翻譯所要<font color="#000000">忠實</font>的，是<font
  color="#000000">忠於「</font><font color="#0000FF">原著所表達的技術</font><font
  color="#000000">」。在此前提之下，譯者享有自由。許多人對於自由的尺度拿捏不準。這麼說吧，你有多少能耐，你就享有多少自由。如果你對你所翻譯的內容，技術面有相當的把握，那麼面對窒礙的原句，你儘可大刀闊斧地重新整構。</font><font
  color="#0000FF">逐字</font><font color="#000000">翻譯肯定是很糟的，</font><font
  color="#0000FF">逐段</font><font color="#000000">翻譯則範圍過大，我認為</font><font
  color="#0000FF">逐句</font><font color="#000000">是最合適的長度。所謂逐句是指針對一個完整（可能涵蓋數個逗點）的句子。</font></p>
  <p><font color="#000000">但是我所說的自由，只有在原文很不理想或很難翻譯的情況下，才得成立。有些人喜歡</font><font
  color="#0000FF">非必要</font><font color="#000000">地將原文改頭換面，脫離原來的</font><font
  color="#0000FF">用字</font><font color="#000000">或</font><font color="#0000FF">結構</font><font
  color="#000000">太遠。我把這種譯法稱為「破壞性翻譯」。我並不喜歡這種風格；做為科技譯本的讀者，很多人希望中譯本在通順的前提下儘可能貼近原味。如果原文還算通暢，你真的沒有必要把它改頭換面。</font></p>
  <p><font color="#000000">許多翻譯理論認為，「信」無法100%達成，遑論其他。下面是一些專家的言論，參考自</font>《論信達雅--嚴復翻譯理論研究》，<font
  lang="ZH-TW" face="新細明體">沈蘇儒著。</font></p>
  <table border="1" width="100%">
    <tr>
      <td width="100%"><font lang="ZH-TW" face="細明體" size="3">最後談為什麼說「等值」、「等效」只是一種難以達到的理想。<p>如果用一句話來回答這個問題，那就是：因為就一個文本(text)的整體而言，要把原作的全部意義、全部信息百分之百地在另一種語言、另一種文化中表現出來是不可能的──至少到目前為止的翻譯實踐證明如此。</p>
      <p>不少中外譯學家都普明白地說到這一點：</p>
      <p>巴爾胡達羅夫說:「百分之百的等值」，「只是翻譯工作者應當力求達到、但<font
      color="#0000FF">永遠也達不到的最高標準</font>。」「完全的等值翻譯與其說是現實，<font
      color="#0000FF">不如說是理想</font>。」</font><font lang="ZH-TW" face="細明體"
      color="#008000" size="3"></p>
      <p></font><font lang="ZH-TW" face="細明體" size="3">奈達說：「信息流失是任何交流過程中必然會有的。」「<font
      color="#0000FF">翻譯中絕對的對等是永遠不可能的</font>。」「人們完全承認，絕對的交流(absolute 
      communication)是極不可能的。」</p>
      <p>紐馬克說，「在我看來，『等效』與其說是任何翻譯的目的，還不如說是一種可取的結果。」「一個文本的文化色彩(地方色彩)越濃、時空距離越遠，<font
      color="#0000FF">等效就越不可思議</font>。」</font><font lang="ZH-TW"
      face="細明體" color="#008000" size="3"></p>
      <p></font><font lang="ZH-TW" face="細明體" size="3">卡特福德(J. C. Catford)指出：「翻譯<font
      color="#0000FF">決不是</font>、或者說<font color="#0000FF">幾乎不可能</font>是原語文本<font
      color="#000000">全部</font>被譯語文本中的等值成分所替換。」(1964)</font></p>
      <font lang="ZH-TW" face="細明體" color="#008000" size="2"><p></font><font lang="ZH-TW"
      face="細明體" size="3">喬治．亨利．劉易斯(George Henry Lewes)在《歌德傳》(Life 
      of Geothe)(1855)中說，「在最成功的努力之下，翻譯也不過是一種近似的東西(approximation)，而努力並不常常是成功的。一篇翻譯作為翻譯也許可以算是好的，但它<font
      color="#0000FF">不可能</font>是原作的完整再現。(A translation may be good as 
      translation, but it can not be an adequate reproduction of the original)」</font><font
      lang="ZH-TW" face="細明體" color="#008000" size="3"></p>
      <p></font><font lang="ZH-TW" face="細明體" size="3">林語堂說，「譯者所能謀達到之忠實，即比較的忠實之謂，非絕對的忠實之謂……<font
      color="#000000">一百分的忠實，只是一種夢想</font>…凡文字有聲音之美、有意義之美、有傳押之美、有文氣文體形式之美，譯者或顧其義而忘其神、或得其神而忘其體，<font
      color="#0000FF">決不能</font>把文義文神文氣文體及聲音之美完全同時譯出……我們須記得翻譯只是一種不得已的很有用的事業，並不是只代原文之謂；譯者所能求的只是<font
      color="#000000">比較的非絕對的成功</font>。」</font></p>
      <font lang="ZH-TW" face="細明體" color="#008000" size="3"><p></font><font lang="ZH-TW"
      face="細明體" size="3">范存忠師說，「嚴格地說，譯品最好能和原作品相等──內容相等、形式相等、格調相等，只是所用的語言不同。這就是馬達忠所說的譯品和原著完全一樣，而讀者看了譯品能和看原著一樣，但<font
      color="#0000FF">這是一個不可能完全實現的理想</font>。」</font></p>
      <font lang="ZH-TW" face="細明體" color="#008000" size="3"><p></font><font lang="ZH-TW"
      face="細明體" size="3">朱光潛說，「有些文學作品根本不可翻譯，尤其是詩(說詩可翻譯的人大概不懂得詩)。大部分文學作品雖可翻譯，譯文也只能得原文的近似。<font
      color="#0000FF">絕對的『信』只是一個理想</font>，事實上很不易做到。」</font></p>
      <font lang="ZH-TW" face="細明體" color="#008000" size="2"><p></font><font lang="ZH-TW"
      face="細明體" size="3">錢鍾書說，「文學翻譯的最高標準是『化』。把作品從一國文字轉變成另一國文字，既能不因語文習慣的差異而露出生硬牽強的痕跡，又能<font
      color="#000000">完全</font>保存原有的風味，那就算得人於『化境』……徹底和全部的『化』是<font
      color="#0000FF">不可能實現的理想</font>」</font></p>
      <font lang="ZH-TW" face="新細明體" size="3"><p>劉宓慶說，「在任何一個語法平面上求得形式對應，使之既處在語言文化、文字結構形式以及行文風格的互相參照的框架之內，又具有語義等值，實在是一種</font><font
      lang="ZH-TW" face="細明體" size="3"><font color="#0000FF">難以企及的理想</font>……就漢英而言，就<font
      color="#000000">更難獲得這種等值了…所謂『等效反應』即便對同語系或同語族的雙語轉換，也只是一個理想。」「翻譯中的『忠』與『信』，也只能是相對的</font>，絕對忠實於原文的譯文也是<font
      color="#0000FF">不存在</font>的。」</font></td>
    </tr>
  </table>
  <p>專家們的說法我都同意，但如果把翻譯的範圍縮小到科技領域，又把「信」的標準定在「<font
  color="#000000">忠於原著所表達的技術」，又為關鍵術語保留了原文，那麼我以為「信」是可以100%完成的。至於「達」，作品出手前自己多看幾遍，一定「達」。</font></p>
  <p><font color="#000000">「雅」是比較高級的目標。要理工科的人拿起筆來「雅」，難度高一點。但其實，只要在中文作品中</font><font
  color="#0000FF">畫龍點睛</font><font color="#000000">地來個成語、俚語、歇後語，對讀者而言也就很雅了。注意「畫龍點睛」，千萬不能畫蛇添足，也不能畫虎不成。</font></p>
  <p><font color="#000000">說到「雅」，不得不再提到先前我說的，目前計算機書籍翻譯以一群20~30歲的理工科年輕人為主力。在目前的教育制度以及社會風氣下，這個族群實少能夠雅得起來。他們的習慣常與流行沾邊，而流行文化和「雅」很難扯上關係。他們對於文字的語氣、語感的敏感度，都令人憂疑。我舉個例子，有一本OO 
  領域的經典名著《Design Patterns》，作者共四人，網路社群（community）暱稱他們為 
  Gang of Four(GOF)。但是臺灣的網路社群卻頗流行稱他們為「</font><font
  color="#0000FF">四人幫</font><font color="#000000">」，並且也入了書。「幫」在中文裡頭不是一個褒字，是十足的貶味，「四人幫」在大陸更是絕對敏感的字眼。把地位如此尊崇的四個人稱為「四人幫」，豈有雅意？</font></p>
  <p><font color="#000000">再舉一個例子，一本Java書籍的作者把Reflection功能（可在執行期探析object相關資訊、動態決定所要產生的 
  object class、甚至在執行期才決定喚起的method）稱為「</font><font
  color="#0000FF">照妖鏡</font><font color="#000000">」，這妖字的感覺對味嗎？</font></p>
  <p><font color="#000000">相較於以上「褒貶」不分的語感問題，下面這個用詞倒顯得問題小了。我們通常說某個領域的 
  creator為「某某之父」。臺灣的網路社群卻頗流行把C++ creator Bjarne 
  Stroustrup稱為「</font><font color="#0000FF">C++的爸爸</font><font color="#000000">」，並且入了書。這…這雅嗎？</font></p>
  <p>「信」的量度是具體而客觀的，「雅」則非常主觀，和個人品味綁在一起。因此，關於「雅」，以上所舉各例，我沒有企圖說服任何人。</p>
  <p>今年10月份我在北京，參加了《程序員》雜誌主辦的一個讀者座談會。會中有一位讀者問我，他從我的文章中感覺我很強調科技文章或書籍的「閱讀樂趣」，但是他不解，科技文章主講技術，最重要的是技術，何必在乎「閱讀的樂趣」，他說他自己看那些硬梆梆的書籍文章，也很有趣味。我回答這是層次問題。好的作（譯）者可以寫出<font
  color="#0000FF">技術一流</font>的作品，更好的作（譯）者可以寫出<font
  color="#0000FF">流暢易讀</font>的科技作品，最頂級的科技作（譯）者寫的東西讓人<font
  color="#0000FF">輕鬆喜悅雋永開懷</font>。至於發問的這位讀者看硬梆梆的書籍文章興趣盎然，那是他的福氣，也是作者的福氣。</p>
  <p>●孰輕孰重</p>
  <p>究竟需要什麼樣的能力，才能把科技翻譯做<strong><big><big>好</big></big></strong>呢？一般人認為翻譯英文文稿，那就英文要好；英文好就能翻譯所有的英文文稿。這是大錯特錯的想法。就算一位翻譯博士，不懂programming技術而要翻譯一篇programming技術文章，也一定錯誤百出。讓他保留原文術語，也一樣。</p>
  <p><font color="#000000">我要強調的是，進行科技翻譯，和你出身哪個</font><font
  color="#0000FF">科系</font><font color="#000000">，沒有必然關連。但是和你有什麼樣的</font><font
  color="#0000FF">專業背景</font><font color="#000000">，有密不可分的關係。科技翻譯要傳達的是技術，外文只是工具，而許多人可以達到科技翻譯所需的語言門檻。決勝點不在外文，在於領域知識（domain 
  knowledge），以及本國文字。</font></p>
  <p>如果要我列出科技翻譯的成功要素，按重要次序，我會說<font
  color="#000000">領域專業素養、中文程度、中文文采、英文程度</font>。</p>
  <p><font color="#000000">(1) 關於領域專業素養<br>
  </font><br>
  沒有領域專業素養，對於術語的處理和行文遣字，就沒有所謂的「內行氣」。面對一堆對你而言毫無意義的單字所堆砌起來的文字，你如何把它化為有意義的東西給第三者看？連你自己都不知道自己筆下的文字意義，你能冀望你的讀者知道嗎？唯一的可能是你的讀者比你內行。</p>
  <p>有一位在化學公司擔任研發主管的朋友來信對我說：『因為工作的需要，我經常拿一些專業的技術資料給同事閱讀，並要求他們翻譯成中文，通常結果是牛頭不對馬嘴，我甚至半開玩笑地問他們是否看得懂自己翻譯的文章，他們老實說自己也看不懂。』連專業人士翻譯專業資料都還如此，不懂領域專業的你，怎麼可能把翻譯工作做好？你徒有<font
  color="#0000FF">翻譯專業</font>，卻沒有<font color="#0000FF">領域專業</font>，是沒有用的。<br>
  <br>
  <br>
  <font color="#000000">(2)關於中文文字功底<br>
  </font><br>
  請注意我說的是<font color="#000000">文字功底</font>，不是文學程度，也不是國學程度。五四運動以降，中國人已經不用艱澀的文言文了，但是很多人以為白話文好寫，以為會講話就會寫白話文。真是這樣嗎 
  ? 
  為什麼有些文章讀起來如沐春風，有的文章讀起來硬是讓你牙齒咬到舌頭呢？</p>
  <p><font color="#000000">最輕微的，舉一個常見例子，網路論壇上常常看到這樣的詢問：</font></p>
  <table border="1" width="100%">
    <tr>
      <td width="100%"><font color="#000000">XXX </font><font color="#0000FF">翻</font><font
      color="#000000">得好不好？</font></td>
    </tr>
  </table>
  <p><font color="#000000">改成這樣是不是比較好：</font></p>
  <table border="1" width="100%">
    <tr>
      <td width="100%"><font color="#000000">XXX </font><font color="#0000FF">譯</font><font
      color="#000000">得好不好？</font></td>
    </tr>
  </table>
  <p>再舉一個例子：</p>
  <table border="1" width="100%">
    <tr>
      <td width="100%"><font color="#000000">...因此 </font><font color="#0000FF">VC++ 
      對於這方面的需求</font><font color="#000000">仍然是最好的選擇。</font></td>
    </tr>
  </table>
  <p><font color="#000000">改成這樣是不是比較好：</font></p>
  <table border="1" width="100%">
    <tr>
      <td width="100%"><font color="#000000">...因此</font><font color="#0000FF">對於這方面的需求而言 
      VC++ </font><font color="#000000">仍然是最好的選擇。</font></td>
    </tr>
  </table>
  <p>下面是某本書的摘錄文字：</p>
  <table border="1" width="100%">
    <tr>
      <td width="100%">PersonalData : static final long serialVersionUID = -3002196610399578122L<br>
      <br>
      有了這項資訊後，我們只要在新更改的類別中加入上面這行輸出<font
      color="#8080FF">的結果</font>，Object Serialization就會知道雖然類別的內容已經有所變動，但是<font
      color="#0000FF">新版的類別仍舊相容於SUID為類別中指定數字的類別。</font></td>
    </tr>
  </table>
  <p>最後一句話把我唬住了，大概是肯特星球上的語言吧。我很傷心地告訴各位，這不是翻譯書的文句，這是一本創作書摘錄來的句子，而且作者頗有名氣。經過無數努力，上下文前後思索，我終於把它看懂並改得像樣些：</p>
  <table border="1" width="100%">
    <tr>
      <td width="100%">PersonalData : static final long serialVersionUID = -3002196610399578122L<br>
      <br>
      有了這項資訊後，我們只要在新更改的類別中加入上面這行輸出，Object 
      Serialization就會知道，雖然類別內容已有變動，但<font color="#0000FF">新版類別仍舊相容於那些「已經明白指定相同之SUID」的類別。</font></td>
    </tr>
  </table>
  <p>再來一句：</p>
  <table border="1" width="100%">
    <tr>
      <td width="100%">如果您希望在儲存物件的時候，還可以額外儲存其他的資訊，或是進行一些後續的動作，那麼就可以<font
      color="#0000FF">為您實作有Serializable介面的物件實作WriteObject()以及相對應的readObject()方法。</font></td>
    </tr>
  </table>
  <p>最後一句話又讓我楞住了。經過仔細推敲，我終於把它看懂並改得像樣些：</p>
  <table border="1" width="100%">
    <tr>
      <td width="100%">如果您希望在儲存物件時還可以額外儲存其他資訊或進行某些後續動作，那麼您可以<font
      color="#0000FF">為「實作有Serializable介面」的那些物件實作出WriteObject()和對應的readObject()。</font></td>
    </tr>
  </table>
  <p><font color="#000000">「英 ==&gt; 
  中轉譯」的過程中，到底英文重要還是中文重要？我只能說，一個中文90英文70的人，和一個英文90中文70的人，必然是前者勝出。「中 
  ==&gt; 英轉譯」則恰恰相反。</font></p>
  <p><font color="#000000">(3) 關於中文文采</font></p>
  <p><font color="#000000">文采</font>是一種抽象、難以量度的東西。要一位科技翻譯者具備<font
  color="#000000">文采</font>，有點陳義過高。不過我們現在談的是「出類拔萃」這檔事。</p>
  <p>你若問我什麼是文采，我想只要讀者能在閱讀時獲得技術以外的喜悅，被雋永的文字牽動了情緒 
  (因拙劣而引起的憤怒與悲哀不算)，這種文字斯可謂有文采矣。<br>
  <br>
  (4)<font color="#ff0000"> </font><font color="#000000">關於英文程度</font><br>
  <br>
  <font color="#000000">英文程度</font>列於第四要件，我的意思並非英文程度不重要，而是，科技翻譯的英文門檻很低，英文的重要性也就不那麼突顯。外國人不會把科技文章當成歐美文學來寫。譯者之所以看懂技術內容，不在於其英文程度，而在於其<font
  color="#000000">領域專業</font>素養。面對複雜的句型，具備<font
  color="#000000">領域專業</font>的譯者可以推敲個八九不離十，而且通常正確，缺乏<font
  color="#000000">領域專業</font>的譯者則只能猜測想像，而且結果往往不夠精準，甚至完全錯誤。「精準」非常重要，讓讀者迷失在模糊的文句中，是一個科技譯者 
  (或作者) 
  不可原諒的過失。要讓你的譯文在技術上精準，靠的是你的領域專業，不是你的英文程度。<br>
  <br>
  </p>
  <p>●素人翻譯<br>
  <br>
  「素人」是指沒有受過正統學院訓練的人（好像是源於日文的一個外借詞）。臺南洪通就是有名的素人畫家，埔里林淵是有名的素人雕刻家。</p>
  <p>我，侯捷，是個素人翻譯工作者。我沒有任何翻譯理論，英文程度也極為一般。正因我是素人，所以我沒有任何包袱與束縛。「正統的翻譯作法應該怎樣怎樣」都與我無關，我只在乎讀者感受，我是完全的讀者導向（而讀者的技術水平和文字水平就以我個人為假想）。因此我可以為了保留原文索引而頁頁對譯，並為了頁頁對譯而學習排版。我也可以為了表現複數而在中文名詞後面加 
  (s)，可以為了讓讀者學習平順而加上一堆註解，可以為了貼近心目中鎖定的讀者而保留許多原文術語，也可以為了斷句清楚而加上前後引號或底線符號…，我可以做任何離經叛道的事，只要我認為這有助於我的作品被讀者舒服地閱讀。</p>
  <p>有一句話說「無知者無懼」，在翻譯上侯捷大概是這樣吧。反正，最後交給市場檢驗。讀者不能接受，自然我會離開。</p>
  <p>●錢途</p>
  <p>我不太喜歡對年輕朋友談錢，那使人目光淺短。但是我知道同學們不得不關心這個切身的問題。可以這麼說，以目前國內科技翻譯之需求，以及目前大環境表現之差勁，只要各位認清自己的專長，並且用心努力，各位可以輕易脫穎而出。</p>
  <p>不要為錢而工作，要為興趣和理想。如果你要，興趣和理想可以為你掙很多錢。只有濃烈的興趣，才能讓你攀登高峰。</p>
  <p>●狐狸與舌頭 — 與君共勉</p>
  <p>最後讓我說兩個小故事，惕勵各位，也惕勵我自己和所有從事翻譯的朋友。第一個故事是極有名的佛家公案：「一字之差 
  五百世輪迴」，被我引用在我的頭一本譯作序言中 : </p>
  <table border="1" width="100%">
    <tr>
      <td width="100%">百丈懷海禪師每次說法，都有一位老者在旁聽道。有一次眾人離去之後，老者向禪師介紹自己，說他原是迦葉尊者時的一名方丈，當時一個學僧問他，道行高的人是否可以了然因果規則，他說「不落因果」。由於說錯了，罰為狐狸身，整整五百世。狐狸化身為老者前來聽道，為的是希望能夠開悟。老禪師問他想知道什麼，老者把學僧的問題再提出來，百丈說「不昧因果」。於是老者開悟，解脫狐狸之身。<p><font
      color="#0000FF" face="華康仿宋體">百丈和尚凡參次，有一老人常隨眾聽法，眾人退，老人亦退，忽一日不退，師遂問：「面前立者復是何人？」老人云：「某甲非人也，於過去迦葉佛時，曾住此山。因學人問：「大修行底人還落因果也無？」某甲對云：「不落因果！」五百世墜野狐身。今請和尚代轉一語，貴脫野狐！」遂問：「大修行底人還落因果也無？」師曰「不昧因果！」老人遂於言下大悟，作禮云：「某甲已脫野狐身，住在山後，敢告和尚，乞依亡僧事例！」。師令維那白槌告眾：「食後送亡僧！」大眾言議：「一眾皆安，涅槃堂又無人病，何故如是？」食後只見師領眾，至山後巖下，以杖挑出一死野狐，乃依火葬。</font></td>
    </tr>
  </table>
  <p>第二個故事是關於佛典大翻譯家的傳奇事蹟，被我引在我的第二本譯作序言中：</p>
  <table border="1" width="100%">
    <tr>
      <td width="100%">佛經有四大譯師：玄奘、鳩摩羅什、法顯和真諦。羅什的父親是天竺王子，母親是龜茲公主。史書上記載他的母親懷他時智慧大進，無師自通天竺語。羅什本人精擅漢梵兩種語文，一生主譯佛經三百八十多卷，成就驚人。他的譯作「流傳後世，咸共弘通」。臨終前他說：「<font
      color="#0000FF" face="華康仿宋體">今於眾前，發誠實誓：若所傳無謬者，當使焚身之後，舌不焦爛</font>」。果然火化後「薪滅形碎，唯舌不灰」。<font
      face="細明體" size="3">&nbsp; （三藏記十四，梁高僧傳二）</font></td>
    </tr>
  </table>
  <p align="justify">科技書籍和嚴肅的經典沾不上邊，但是同樣做著開智的工作。希望各位謹記，你們筆下出去的東西，影響的不是一個兩個人，是一千兩千個人，甚至一萬兩萬個人。我們都應該懷著戰戰兢兢的心情，不但不做五百世狐狸，最好還擁有一只燒不爛的舌頭。</p>
  <p align="justify">　</p>
  <p align="justify"><strong><big><big>Q/A </big></big></strong></p>
  <p align="justify"><font color="#0000FF">Q1</font>. 
  我在一家專門做軟體中文化的公司。我舉一個例子，對於軟體說明文件中的 
  version 3.0，公司內部分為兩派，一派認為應該譯為「3.0 
  版」，一派認為應該譯為「版本 3.0」，請問您的看法。</p>
  <p align="justify"><font color="#0000FF">A1</font>. 
  就這個問題，我認為我都可以接受。我自己可能不經意地有時候用「3.0 
  版」，有時候用「版本 3.0」。「版本 3.0」的語氣很像「術語翻譯之我見」這樣，是一種後詞補充前詞的用法（不知道文字學裡頭怎麼稱呼），這在中文時常見到。如果譯為「3.0 
  版本」我就覺得怪怪的，好像語氣還沒結束，後面還要說些什麼似的。這都是我個人的看法，很直觀的。</p>
  <p align="justify"><font color="#0000FF">Q2</font>. 
  您提到科技翻譯最需要領域知識，但您又提到只要努力，只要有興趣，可以攀登高峰做到最好。我想請問，我們大部份同學來自文科，徒有興趣又如何能夠填補我們所欠缺的領域知識？</p>
  <p align="justify"><font color="#0000FF">A2</font>. 這是一個定位問題 — 
  你自己在科技翻譯中的角色定位問題。如果你要翻譯諸如我所翻譯的主題，而你從來沒有受過任何計算機訓練，可能你先需要10年的充電。但是人沒有必要以己之短迎人之長，你又何必選擇一個距離你如此遙遠的專業領域？剛才我聽所長說，所內有些同學是我的忠實讀者，喔，能夠看我的書，又從翻譯研究所畢業，以後是我可敬的對手呀。</p>
  <p align="justify"><font color="#0000FF">Q3</font>. 
  我是您的忠實讀者。我很喜歡您對於書籍的譯註，或摘要性的說明。可否考慮對一些高階難懂的書籍例如《Design 
  Patterns》，出版類似導引之類的書籍？</p>
  <p align="justify"><font color="#0000FF">A3</font>. 這是很棒的建議。OOP（Object 
  Oriented Programming）經驗沒個十年八年，根本對《Design Patterns》無所體會。但是卻有那麼多人把它買進來放在書架上。收藏好書是好事，屢看不懂則難免打擊信心。我的確有撰寫導引的計劃，但還僅止於計劃。</p>
  <p align="justify"><font color="#0000FF">Q4</font>. 
  您提到術語應該保留英文，但是對我們文科背景的人而言，這些術語還是形成一個很大的障礙。</p>
  <p align="justify"><font color="#0000FF">A4</font>. 
  仍然是定位問題。我剛才先已清楚界定了我所謂科技翻譯的讀者對象，然後才有後續的討論。一個文科背景的人，應該不會有興趣看我所說的那些我認為應該保留很多原文術語的科技書籍，而如果他有需要或有興趣看，他的技術素養應該已經不是文科背景所能侷限的了。</p>
  <p align="justify"><font color="#0000FF">Q5</font>. 
  您提到對兩岸術語的統一感到悲觀，但是不是我們仍然應該努力去做出一個統一的術語庫，總不能讓這個問題就這樣永遠存在。</p>
  <p align="justify"><font color="#0000FF">A5</font>. 
  我只是對結果悲觀，並不反對過程。統一的術語庫當然是件好事，我非常樂觀其成。根據我的觀察以及對人性的認識，在一個像臺灣這樣自由開放的社會裡，我們不可能強迫作者或譯者使用什麼樣的中文術語。而且你知道，愈是領導人物，主觀愈強。主觀強是什麼意思，您一定了解吧呵呵。拿我自己來說，我不欣賞的譯詞，不可能有任何力量讓我採用。</p>
  <p align="justify">但是，的確，再怎麼說，我也希望看到一個被兩岸學術界或翻譯界共同推出的統一術語庫。就這件事情，「有」肯定好過「沒有」。</p>
  <p align="justify">-- the end </p>
</blockquote>
</body>
</html>
