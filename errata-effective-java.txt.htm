<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=big5">
<meta name="GENERATOR" content="Microsoft FrontPage 3.0">
<title>勘誤《Effective Java》中文版（繁體）</title>
</head>

<body>

<pre>本勘誤檔更新日期: 2003/12/25

《Effective Java 中文版》（繁體）
碁峰資訊圖書股份有限公司出版, 2003/08 

原著：Effective Java - Programming Language Guide, 
      by Joshua Bloch
      Addison Wesley, 2001

注意：以下按修正日期排序。</pre>

<pre>======================================================</pre>

<pre>書籍內容更正，有兩種作法，一是在網際網路上做個專屬勘誤
網頁，讓大家上去看。這是比較即時的作法。而更理想更負責
的作法是：不但有勘誤網頁，並且在新刷中予以更正 — 如果
有新刷的話 :)</pre>

<pre>不過，理想與現實之間需要一點協調。書籍的製作是這樣的，
製版與印刷時，是以檯（8 或 16 頁）為單位。因此，每換一
頁，同檯的各頁統統要換過。這便造成印製成本的大量增加。</pre>

<pre>以前，我從不考慮成本，只要我認為書籍內容有修改必要，即
使只是某個字詞用得不甚理想，我都會請出版社更新。出版社
也都全力配合（這一點讓我非常感謝）。</pre>

<pre>慢慢地，我的行事不再這麼霹靂，我覺得我多少也要站在出版
社的立場想想。所以我打算，如果是關係到對錯正誤的根本性
問題，我便一定在新刷修正。如果是易判別的錯別字或排版誤
失或用詞不很恰當…等等，我便先在勘誤網頁上明載，但不求
一定於新刷中更正。直到收集來的這類誤失較為密集了，才一
併於下一刷修正。</pre>

<pre>哪些是新刷已修正的，哪些是暫請讀者自行動手更改的，我會
在勘誤網頁（網址見書封底）上清楚說明。</pre>

<pre>這是個便宜法門，請讀者見諒。</pre>

<pre>書籍應該在出版前就詳細檢查，以完美之姿出現。但是完美很
難達到。對於下列大大小小輕重不等的誤失，我謹向讀者說抱
歉。</pre>

<pre>本檔歡迎廣為流傳，謝謝。</pre>

<pre>以下為更新記錄。如果您購買的是第 n 刷，請將以下第 n+1
刷之後的更新內容自行修正至書上。謝謝</pre>

<pre>======================================================</pre>

<pre>以下暫請讀者自行更正：
（注意，Lm 表示第 m 行，L-n 表示倒數第 n 行）</pre>

<pre>■p5,L-7（筆誤）
原文：有<font color="#FF0000">兩</font>個優點和兩個缺點
更正：有<font
color="#0000FF">三</font>個優點和兩個缺點
感謝：Hsing-Yen Ann
日期：2003/12/16

■p41,L6（讀者補充）
原譯：
  Java 程式庫中的許多 classes 如 String、Integer 和 Date，
  都將他們的 hashCode() 所傳回的確切值 (exact value) 指定
  為實體值 (instance value) 的某個函數。這通常不是個好主意。
  
英文：
  Many classes in the Java platform libraries, 
  such as String, Integer, and Date, specify the exact
  value returned by their hashCode method as a function of 
  the instance value.
  
讀者來函：
<font
color="#408080">  譯文讀起來怪怪的，難以了解原義。
  我以為這個 specify 動詞應該譯為「把...列入規格書」更為合適。

  以 String 為例，Javadoc 規格中明確寫下 hashCode() 的計算方式為:
  s[0]*31^(n-1) + s[1]*31^(n-2) + ... + s[n-1]
  
  本段文字我無法通順翻譯出來，但我認為它的意思應是：
  像 String 這樣的 classes，Java 明確的把 hashCode() 
  內的計算方式 (數學函數) 以及某個 instance 值 (狀態)
  所必然得到的確切 hash code 值列入規格中，是一種很不好的做法。</font>
感謝：Hsing-Yen Ann
日期：2003/12/16

■p44,L-7（修潤）
原文：
  為「含於 toString() 回傳值中的資訊」提供一種編程途徑，總是個好主意。
更正：
<font
color="#0000FF">  為「包含於 toString() 回傳值中的各項資訊」提供可以用編程方式存取的途徑，
  總是個好主意。</font>
感謝：Hsing-Yen Ann
日期：2003/12/16

■p48,L-18（筆誤）
原文：java.util.L<font
color="#FF0000">o</font>nkedList
更正：java.util.L<font color="#0000FF">i</font>nkedList
感謝：Hsing-Yen Ann
感謝：JiaYun
日期：2003/12/16</pre>

<pre>■p76, L7（筆誤）
原文：所以 St<font color="#FF0000">r</font>ack 不該擴展 Vector
更正：所以 Stack 不該擴展 Vector
感謝：JiaYun
日期：2003/12/16

■p123,L14（筆誤）
原文：<font
color="#FF0000">這</font>了保護
更正：<font color="#0000FF">為</font>了保護
感謝：Hsing-Yen Ann
日期：2003/12/16

■p136,L2（修潤）
原文：一個 API 如果有用，必須附帶說明文件。
更正：一個 API 如果<font
color="#0000FF">想要</font>有用，必須附帶說明文件。
感謝：Hsing-Yen Ann
日期：2003/12/16

■p145,L-4（筆誤）
原文：Integer.MIN_V<font
color="#FF0000">AK</font>YE
更正：Integer.MIN_V<font color="#0000FF">AL</font>UE
感謝：Hsing-Yen Ann
日期：2003/12/16

■p145,L-3（筆誤）
原文：Integer.MIN_V<font
color="#FF0000">S</font>LUE
更正：Integer.MIN_V<font color="#0000FF">A</font>LUE
感謝：Hsing-Yen Ann
日期：2003/12/16

■p146,L5（筆誤）
原文：jav<font
color="#FF0000">z</font>.util
更正：jav<font color="#0000FF">a</font>.util
感謝：Hsing-Yen Ann
日期：2003/12/16

■p147,L8（筆誤）
原文：java.u<font
color="#FF0000">nt</font>l
更正：java.u<font color="#0000FF">ti</font>l
感謝：Hsing-Yen Ann
日期：2003/12/16

■p147,L-2（修潤）
原文：
  最後一個例子，假設你想知道在兩個 Hashtable 實體 h1 和 h2 中，
  造成映射值 (mapping) 相同的每一個鍵值 (key)。
英文：
  Finally, suppose you want to know all of the keys for which 
  two Hashtable instance, h1 and h2, contain the same mappings.   
修改：  
  <font
color="#0000FF">最後一例，假設你想知道在兩個 Hashtable 實體 h1 和 h2 中，</font>
<font
color="#0000FF">  每一個會「造成映射值 (mapping) 相同」的鍵值 (keys)。</font>
感謝：Hsing-Yen Ann
日期：2003/12/16

■p151,L-1（筆誤）
原文：<font
color="#FF0000">b</font>igDecimal
更正：<font color="#0000FF">B</font>igDecimal
感謝：Hsing-Yen Ann
日期：2003/12/16

■p157,L-9（筆誤）
原文：<font
color="#FF0000">J</font>ava.util.TimerTask
更正：<font color="#0000FF">j</font>ava.util.TimerTask
感謝：Hsing-Yen Ann
日期：2003/12/16

■p161,L14（修潤）
原文：在 1.3 版<font
color="#FF0000">中</font>，
更正：在 1.3 版<font color="#0000FF">之後</font>，
感謝：Hsing-Yen Ann
日期：2003/12/16

■p161,L-9（修潤）
原文：使用 native 函式有<font
color="#FF0000">個</font>嚴重的缺點。
更正：使用 native 函式有<font
color="#0000FF">些</font>嚴重的缺點。
感謝：Hsing-Yen Ann
日期：2003/12/16

■p163,L9（筆誤）
原文：java.awt.Comonent
更正：java.awt.Com<font
color="#0000FF">p</font>onent
感謝：Hsing-Yen Ann
日期：2003/12/16

■p171,L1（筆誤）
原文：I<font
color="#FF0000">n</font>terator
更正：Iterator
感謝：Hsing-Yen Ann
日期：2003/12/16

■p180,L7（筆誤）
原文：java.util.lo<font
color="#FF0000">n</font>ging
更正：java.util.lo<font color="#0000FF">g</font>ging
感謝：Hsing-Yen Ann
日期：2003/12/16

■p186,L7（筆誤）
原文：Collections.<font
color="#FF0000">S</font>ort
更正：Collections.<font color="#0000FF">s</font>ort
感謝：Hsing-Yen Ann
日期：2003/12/16

■p206,L-8,L-10,L-11; p207,L2,L8  共5處（筆誤）
原文：<font
color="#FF0000">Y</font>ield()
更正：<font color="#0000FF">y</font>ield()
感謝：Hsing-Yen Ann
日期：2003/12/16

■p209,L-11（筆誤）
原文：En<font
color="#FF0000">uu</font>umeration
更正：Enumeration
感謝：Hsing-Yen Ann
日期：2003/12/16</pre>

<pre>■p130, L-9（筆誤）
原文：writeBoolean(boo<font color="#FF0000">k</font>lean) 
更正：writeBoolean(boolean) 
感謝：ovid_lin
日期：2003/12/25

-- the end</pre>
</body>
</html>
