<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>

<head>
<meta content="text/html; charset=big5" http-equiv="Content-Type">
<meta content="Microsoft FrontPage 3.0" name="GENERATOR">
<title>勘誤《Essential C++》簡體中文版</title>
</head>

<body background %22bgColor=-#ffffff%22%22 tppabs="http://jjhou.boolan.com/bgColor=%22#ffffff%22" text="#000000">

<hr>

<h2 align="center"><font color="#800000">《Essential C++》<br>
簡體中文版<br>
<br>
勘誤表<br>
<br>
<small>侯捷<br>
<br>
周筠&nbsp;/ 王凱 / 孟岩&nbsp;&nbsp; 協助</small><br>
<br>
<small><small>感謝所有來信指正的讀者</small></small></font></h2>

<p align="center">　</p>

<p align="center"><font color="#800000">侯捷觀點</font></p>

<p align="center"><font color="#800000">有些讀者會仔細區分：技術錯誤，作（譯）者的責任，文字錯誤，編輯的責任，<br>
印刷錯誤，出版社的責任…<br>
（其實無所謂「印刷錯誤」— 印刷怎麼會有錯誤？）<br>
<br>
我認為，一本技術書籍，內容上的一切錯誤都是作（譯）者的責任。<big><br>
</big>不論技術誤謬、錯別字、代碼誤植、頁次誤排、圖表編號錯誤…，<br>
統統都是作（譯）者的責任。<br>
只有裝訂錯誤、缺頁、折損才是出版社的責任。<br>
<br>
一本書的成功，作（譯）者享受最大的榮耀。<br>
享受最大榮耀的人，要負起最大的責任。<br>
侯捷書籍裡裡外外的所有責任，侯捷自己扛。</font></p>

<p align="center"><font color="#800000">我的合作夥伴願意花大量成本，配合我，對紙本書不斷勘誤修正，<br>
這很不容易。我認為他們的態度非常專業。</font></p>

<hr>

<blockquote>
  <p><span lang="EN-US">本書之繁簡兩版書籍各自獨立維護。簡體版讀者只需注意此簡體版勘誤表即可。</span></p>
  <p>　</p>
  <p><span lang="EN-US">本書（簡體版）根據繁體版之最新修定內容轉譯完成。<font
  color="#0000FF">原本應將 2001/07/18 
  之前的所有繁體版錯誤都加以修正，但因個人</font></span><font
  FACE="新細明體" COLOR="#0000ff">疏失，某些錯誤列入了勘誤表，卻忘了修改電子檔，導致簡體版內仍有</font><font
  COLOR="#0000ff">2001/07/18 </font><font FACE="新細明體" COLOR="#0000ff">之前的少量錯誤。我很抱歉。</font></p>
  <p><span lang="EN-US">以下是簡體版錯誤（<font color="#0000FF">按發現日期排序</font>），<strong>暫請自行修正</strong>：<br>
  （特別感謝大陸讀者 </span>icesword 熱心比對繁體版勘誤表）<br>
  <br>
  Lm 表示第m 行﹐L-n 表示倒數第n 行</p>
  <p>■p159, L14（原書筆誤）<br>
  原文：num_sequence( len, beg_pos, <font color="#FF0000">&amp;</font>_elems )<br>
  更正：num_sequence( len, beg_pos, _elems )<br>
  感謝：minbobo<br>
  日期：2001/01/23</p>
  <p>■p164,L16（原書筆誤）<br>
  原文﹕num_sequence(len,beg_pos,<font color="#FF0000">&amp;</font>_elems,&quot;Fibonacci&quot;)<br>
  更正﹕num_sequence(len,beg_pos,_elems,&quot;Fibonacci&quot;)<br>
  感謝﹕minbobo<br>
  日期﹕2001/01/23<br>
  <br>
  ■p75,L17（中譯本筆誤）<br>
  原文﹕int *pa =find(ia,ia+asize,1024);<br>
  更正﹕int *p<font color="#0000FF">i</font>a =find(ia,ia+asize,1024);<br>
  感謝﹕ikai<br>
  日期﹕2001/01/27<br>
  <br>
  ■p75,L22（中譯本筆誤）<br>
  原文﹕if (pia !=ia+asize )<br>
  更正﹕<font color="#0000FF">if (it !=ivec.end())</font><br>
  感謝﹕ikai<br>
  日期﹕2001/01/27</p>
  <p>■p20, L8（中譯本筆誤）<br>
  原文：bool next_sg = true;<br>
  更正：bool next_s<font color="#0000FF">eq</font> = true;<br>
  感謝：chenyuyuan<br>
  日期：2001/01/30<br>
  <br>
  ■p20,L25（中譯本筆誤）<br>
  原文﹕num_cor++;<br>
  更正﹕num_<font color="#0000FF">right</font>++;<br>
  感謝﹕chenyuyuan<br>
  日期﹕2001/01/30<br>
  <br>
  ■p20,L-3（中譯本筆誤）<br>
  原文﹕}//while(<font color="#FF0000">m</font>ext_seq ==true )結束<br>
  更正﹕}//while(<font color="#0000FF">n</font>ext_seq ==true )結束<br>
  感謝﹕chenyuyuan<br>
  日期﹕2001/01/30<br>
  <br>
  ■p2,L-13（中譯本筆誤）<br>
  原文﹕舉例來說﹐如果我們撰寫 <font color="#FF0000">main()</font> 函數<br>
  更正﹕舉例來說﹐如果我們撰寫 <font color="#0000FF">min()</font> 函數<br>
  感謝﹕michael liang<br>
  日期﹕2001/02/13<br>
  <font color="#FF0000">注意：本頁 L-11, L-12 亦各有一個 main()，應為 min()。繁體版並沒有這個錯誤，我不知道為什麼簡體版會出錯。華中出版社必須就此嚴格檢討哪個作業環節出了差錯。</font></p>
  <p>■p94,L-7（中譯本處理錯誤）<br>
  原文﹕back_inserter(ivec2)<font color="#FF0000">;</font><br>
  更正﹕back_inserter(ivec2)<font color="#0000FF">,</font><br>
  感謝﹕jiing<br>
  日期﹕2001/04/20<br>
  <br>
  ■p16 L2（中譯本筆誤）<br>
  原文﹕condit<font color="#FF0000">a</font>ion expression<br>
  更正﹕condition expression<br>
  感謝﹕ceknight<br>
  日期﹕2001/06/06</p>
  <p>■p100 L4（中譯本筆誤）<br>
  原文：protype<br>
  更正：pro<font color="#0000FF">to</font>type<br>
  感謝：ceknight<br>
  日期：2001/06/21</p>
  <p>■p59 L-5（中譯本筆誤）<br>
  原文﹕vector&lt;string &gt;vec<br>
  更正﹕vector&lt;string &gt;<font color="#0000FF">s</font>vec<br>
  感謝﹕sercocn<br>
  日期﹕2001/07/31<br>
  <br>
  ■p212 L-10（英文版錯誤）<br>
  原文﹕<font face="Fixedsys">if (ch !='y' <font color="#FF0000">||</font> ch !='Y')</font><br>
  更正﹕<font face="Fixedsys">if (ch !='y'<font color="#0000FF"> &amp;&amp;</font> ch 
  !='Y')</font><br>
  感謝﹕seaweed<br>
  日期﹕2001/08/22<br>
  <br>
  ■p80（英文版錯誤）<br>
  原文﹕本頁最上程式﹐while 回圈內缺少一個 <font color="#0000FF">++it </font>動作。<br>
  感謝﹕Honesty<br>
  日期﹕2001/08/22<br>
  更正﹕以下我寫一個<font color="#0000FF">完整</font>示範程式。<br>
  <font face="8514fix"><br>
  </font><font face="Fixedsys"><font color="#C0C0C0"><small><small>//Essential C++,p79 
  最下<br>
  //以下程式碼會將 ival 插入ilist 內﹐並維持其遞增次序﹕</small></small><br>
  </font><small><small><br>
  #include &lt;list&gt;<br>
  #include &lt;iostream&gt;<br>
  #include &lt;iterator&gt;//for ostream_iterator<br>
  using namespace std;<br>
  int main()<br>
  {<br>
  &nbsp; list&lt;int&gt; ilist;<br>
  &nbsp; //...充填 ilist<br>
  &nbsp; ilist.push_back(1);<br>
  &nbsp; ilist.push_back(3);<br>
  &nbsp; ilist.push_back(5);<br>
  &nbsp; ilist.push_back(7);<br>
  &nbsp; ilist.push_back(9);</small></small><br>
  <small><small><br>
  &nbsp; ostream_iterator&lt;int&gt; out(cout,&quot;&quot;);<br>
  &nbsp; copy(ilist.begin(),ilist.end(),out);//1 3 5 7 9<br>
  &nbsp; cout &lt;&lt;endl;</small></small><br>
  <small><small><br>
  &nbsp; int ival =6;<br>
  &nbsp; list&lt;int&gt;::iterator it =ilist.begin();</small></small><br>
  <small><small>&nbsp; while (it !=ilist.end()) <font color="#0000FF">{</font><br>
  &nbsp;&nbsp;&nbsp; if (*it &gt;=ival ) <font color="#0000FF">{</font><br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ilist.insert(it,ival );<br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;&nbsp;&nbsp; // 跳離回圈<br>
  &nbsp;&nbsp;&nbsp; <font color="#0000FF">}</font><br>
  <font color="#0000FF">&nbsp;&nbsp;&nbsp; it++;&nbsp;&nbsp; <br>
  </font>&nbsp; <font color="#0000FF">}</font></small></small><br>
  <small><small><br>
  &nbsp; if (it ==ilist.end())<br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ilist.push_back(ival );</small></small><br>
  <small><small><br>
  &nbsp; copy(ilist.begin(),ilist.end(),out);//1 3 5 6 7 9<br>
  }<br>
  </small></small></font><br>
  ■pv,目錄 1.4（中譯本筆誤）<br>
  原文﹕條件（Condit<font color="#FF0000">a</font>ional）述句<br>
  更正﹕條件（Conditional）述句<br>
  感謝﹕reader<br>
  日期﹕2001/09/19<br>
  <br>
  ■p15,標題 1.4（中譯本筆誤）<br>
  原文﹕條件（Condit<font color="#FF0000">a</font>ional）述句<br>
  更正﹕條件（Conditional）述句<br>
  感謝﹕reader<br>
  日期﹕2001/09/19<br>
  <br>
  ■p74,L14（英文版錯誤）<br>
  原文﹕<font face="Fixedsys">vector&lt;string&gt;::const_iterator =cs_vec.begin();</font><br>
  更正﹕<font face="Fixedsys">vector&lt;string&gt;::const_iterator <font color="#0000FF">iter</font> 
  =cs_vec.begin();</font><br>
  感謝﹕reader<br>
  日期﹕2001/09/19<br>
  <br>
  ■p203,L10（中譯本筆誤）<br>
  頁碼﹐9/10<br>
  原文﹕[ STROU<font color="#FF0000">P</font>STRUP97]<br>
  更正﹕[ STROUSTRUP97]<br>
  感謝﹕SolStice<br>
  日期﹕2001/09/23<br>
  <br>
  ■pvi, 目錄5.1（中譯本筆誤）<br>
  原文：物件導向（Object-Oriented 編程概念<br>
  更正：物件導向（Object-Oriented<font color="#0000FF">）</font>編程概念<br>
  感謝：DreamHead<br>
  日期：2001/09/30<br>
  <br>
  ■p96, L3（中譯本處理錯誤）<br>
  原文：<font face="Fixedsys">copy( is, eof, backinserter( text ));</font><br>
  更正：<font face="Fixedsys">copy( is, eof, back<font color="#0000FF">_</font>inserter( 
  text ));</font><br>
  感謝：DreamHead<br>
  日期：2001/09/30<br>
  <br>
  ■p124, L-6（中譯本處理錯誤）<br>
  原文：<font face="Fixedsys">if ( _index &gt;= Triangular::elems<font color="#FF0000">.</font>size() 
  )</font><br>
  更正：<font face="Fixedsys">if ( _index &gt;= Triangular::elems<font color="#0000FF">_</font>size() 
  )</font><br>
  感謝：DreamHead<br>
  日期：2001/09/30<br>
  <br>
  ■p128, L11（中譯本處理錯誤）<br>
  原文：<font face="Fixedsys">cout &lt;&lt; trian &lt;&lt; end;</font><br>
  更正：<font face="Fixedsys">cout &lt;&lt; trian &lt;&lt; end<font color="#0000FF">l</font>;</font><br>
  感謝：DreamHead<br>
  日期：2001/09/30<br>
  <br>
  ■p71, L-10, L-11（中譯本處理錯誤）<br>
  原文：<font face="Fixedsys">double *pd = find( da, da+6, <font color="#FF0000">ia</font>[3] 
  );</font><br>
  <font face="Fixedsys">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string *ps = find( sa, sa+4, <font
  color="#FF0000">ia</font>[3] );</font><br>
  更正：<font face="Fixedsys">double *pd = find( da, da+6, <font color="#0000FF">da</font>[3] 
  );</font><br>
  <font face="Fixedsys">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string *ps = find( sa, sa+4, <font
  color="#0000FF">sa</font>[3] );</font><br>
  感謝：chenshuo<br>
  日期：2001/10/02<br>
  <br>
  ■p52, L8（中譯本處理錯誤）<br>
  原文：<font face="Fixedsys">display(<font color="#FF0000">&amp;</font>vec);</font><br>
  更正：<font face="Fixedsys">display(vec);</font><br>
  感謝：ericdc<br>
  日期：2001/10/02</p>
  <p>■p61（排版失誤）<br>
  原文：<font face="Fixedsys">頁眉有誤</font><br>
  更正：<font face="Fixedsys">請華中出版社調整</font><br>
  感謝：ericdc<br>
  日期：2001/10/02</p>
  <p>■p27 L-11（簡體版譯詞）<br>
  原文﹕取得“位於該指針所指之內存址上”的對象<br>
  更正﹕取得“位於該指針所指之內存<font color="#0000FF">地</font>址上”的對象<br>
  感謝：wangf501<br>
  日期：2001/10/03</p>
  <p>■p36 L1, p59 L3（簡體版譯詞）<br>
  原文﹕置物箱（placeholder）<br>
  討論﹕placeholder大陸一般譯作“<font color="#0000FF">佔位符</font>”﹐如無英文提示﹐多數人會一頭霧水<br>
  感謝：wangf501<br>
  日期：2001/10/03</p>
  <p>■p62 L7 L8（簡體版譯詞）<br>
  原文﹕數目組<br>
  更正﹕<font color="#0000FF">數組</font><br>
  ■p62 L14<br>
  原文﹕數目列<br>
  更正﹕<font color="#0000FF">數列</font><br>
  討論﹕數目列､數目組都是台灣術語吧﹖<br>
  侯捷回覆：數目列､數目組都不是台灣術語。array 和 sequence 
  在臺灣分別稱為<font color="#0000FF">陣列</font>和<font color="#0000FF">數列</font>（或<font
  color="#0000FF">序列</font>）。簡體版譯詞由轉譯者決定。<br>
  感謝：wangf501<br>
  日期：2001/10/03</p>
  <p>■p75 L-9（中譯本錯別字）<br>
  原文﹕嘎然而止<br>
  更正﹕<font color="#0000FF">戛</font>然而止<br>
  感謝：wangf501<br>
  日期：2001/10/03</p>
  <p>■p99 L11（中譯本處理錯誤）<br>
  原文﹕<font face="Fixedsys">#include<font color="#FF0000">d</font> &lt;vector&gt;</font><br>
  更正﹕<font face="Fixedsys">#include &lt;vector&gt;</font><br>
  感謝：wangf501<br>
  日期：2001/10/06</p>
  <p>■p122 L-3（中譯本處理錯誤）<br>
  原文﹕<font face="Fixedsys">Pell<font color="#FF0000">:</font>iterator</font><br>
  更正﹕<font face="Fixedsys">Pell<font color="#0000FF">::</font>iterator</font><br>
  感謝：wangf501<br>
  日期：2001/10/06</p>
  <p>■p18 L7（中譯本處理錯誤）<br>
  原文﹕<font face="Fixedsys">next_ elem</font><br>
  更正﹕<font face="Fixedsys">next_elem</font><br>
  感謝：Puma<br>
  日期：2001/10/12</p>
  <p>■p14 L-11<br>
  原文﹕<font face="Fixedsys">! ival % 2 // 不<font color="#FF0000">完全</font>正確</font><br>
  建議﹕<font face="Fixedsys">! ival % 2 // 不正確</font><br>
  感謝：Puma<br>
  日期：2001/10/12</p>
  <p>■p33 L2（中譯本處理錯誤）<br>
  原文：<font face="Fixedsys">ios_base<font color="#FF0000">:</font>in | ios_base::app</font><br>
  更正：<font face="Fixedsys">ios_base<font color="#0000FF">::</font>in | ios_base::app</font><br>
  感謝：Maldini<br>
  日期：2001/10/30<br>
  <br>
  ■p124 L4（中譯本處理錯誤）<br>
  原文：<font face="Fixedsys">friend class T<font color="#FF0000">G</font>riangular_iterator;</font><br>
  更正：<font face="Fixedsys">friend class Triangular_iterator;</font><br>
  感謝：Jackychan<br>
  日期：2001/10/30<br>
  <br>
  ■p130 L12（英文版筆誤）<br>
  原文：<font face="Fixedsys">num_sequence::nstype( ix )</font><br>
  更正：函式名稱 nstype() 與接下來的文字描述不符（文中稱為<font
  face="Fixedsys"> ns_type()</font>）。<br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 應修改一致。<br>
  感謝：Jackychan<br>
  日期：2001/10/30<br>
  <br>
  ■p43 L13（中譯本處理錯誤）<br>
  原文：about to call swap! ix: 0 jx: 7 swapping: 8 with <font color="#FF0000">3</font><br>
  更正：about to call swap! ix: 0 jx: 7 swapping: 8 with <font color="#0000FF">2</font><br>
  感謝：Maldini<br>
  日期：2001/10/30<br>
  <br>
  ■p207 L18（中譯本筆誤）<br>
  原文：manip<font color="#FF0000">o</font>lator<br>
  更正：manip<font color="#0000FF">u</font>lator<br>
  感謝：shi_xiao_d<br>
  日期：2001/10/30<br>
  <br>
  ■p172 L-10, L-9（中譯本筆誤）<br>
  原文：temp<font color="#FF0000">al</font>te<br>
  更正：template<br>
  感謝：lh666<br>
  日期：2001/10/30<br>
  註：請一併修正 pvi 的目錄 6.3<br>
  <br>
  ■p86 L-9（中譯本處理錯誤）<br>
  原文：<font face="Fixedsys">fib_plus_pell<font color="#FF0000">_</font>begin(),</font><br>
  更正：<font face="Fixedsys">fib_plus_pell<font color="#0000FF">.</font>begin(),</font><br>
  感謝：<br>
  日期：2001/10/31</p>
  <p>■p68~p72 3.1 節（英文版錯誤）<br>
  原文：本節所有的 find() 的 return type 都缺少一個 <font color="#0000FF">const</font>。<br>
  更正：請自行加上。<br>
  <font color="#0000FF">備註</font>：新刷將不予修改，恐牽一髮動全局。這種錯誤留待原作者全盤考量。<br>
  備註：接受端（例如 p71,L-12的 pi, pd, ps）也都應該加上 const。<br>
  日期：2001/10/31<br>
  <br>
  ■p82 L18（英文版錯誤）<br>
  原文：<font color="#0000FF">is_elem(...)</font> 函式碼有誤<br>
  更正：建議將本頁所用之 max_element() 改為 max()。注意，程式碼和文字都要改。<br>
  <font color="#0000FF">備註</font>：新刷將不予修改，恐牽一髮動全局。這種錯誤留待原作者全盤考量。<br>
  日期：2001/10/31<br>
  <br>
  ■p31 L-8（中譯本處理錯誤）<br>
  原文：<font face="Fixedsys">ifstream infile( &quot;seq_data.txt&quot; )</font><br>
  更正：<font face="Fixedsys">ifstream infile( &quot;seq_data.txt&quot; )<font
  color="#0000FF">;</font></font><br>
  感謝：jackychan<br>
  日期：2001/11/01<br>
  <br>
  ■p164 L-4（中譯本處理錯誤）<br>
  原文：<font face="Fixedsys"><font color="#FF0000">cosnt</font> char*</font><br>
  更正：<font face="Fixedsys"><font color="#0000FF">const</font> char*</font><br>
  感謝：jackychan<br>
  日期：2001/11/01</p>
  <p>■p72 L13（中譯本處理錯誤）<br>
  原文：<font face="Fixedsys">find(begin(<font color="#FF0000">sevc</font>),end(svec),search_value);</font><br>
  更正：<font face="Fixedsys">find(begin(<font color="#0000FF">svec</font>),end(svec),search_value);</font><br>
  感謝：Vale<br>
  日期：2001/11/01<br>
  <br>
  ■p114 L-12（中譯本處理錯誤）<br>
  原文：<font face="Fixedsys">Triangular&amp; Triangular</font><br>
  更正：<font face="Fixedsys">Triangular&amp; Triangular<font color="#0000FF">::</font></font><br>
  感謝：Vale<br>
  日期：2001/11/01<br>
  <br>
  ■p229 L16（英文版錯誤）<br>
  原文：<font face="Fixedsys">return&nbsp;&nbsp;&nbsp; ::find(_stack.begin(),end_it,elem 
  )!=end_it;</font><br>
  更正：<font face="Fixedsys">return <font color="#0000FF">std</font>::find(_stack.begin(),end_it,elem 
  )!=end_it;</font><br>
  感謝：Vale<br>
  日期：2001/11/01<br>
  <font color="#FF0000">備註</font>：新刷將不予修改，因為作者在接下來的文字中說：<font
  color="#408080">『為了喚起這兩個泛型演算法，我必須使用 global scope（全域範圍）運算子。如果不這麼做...』</font>，侯捷猜想作者是在一個比較老舊的環境下進行這段編程。如果侯捷依上述更正內容做修改，難保在什麼地方出現前後不一致的情況。請讀者注意。<br>
  <br>
  ■p229 L19（英文版錯誤）<br>
  原文：<font face="Fixedsys">return &nbsp;&nbsp;&nbsp; 
  ::count(_stack.begin(),_stack.end(),elem );</font><br>
  更正：<font face="Fixedsys">return <font color="#0000FF">std</font>::count(_stack.begin(),_stack.end(),elem 
  );</font><br>
  感謝：Vale<br>
  日期：2001/11/01<br>
  <font color="#FF0000">備註</font>：見上一個勘誤備註。</p>
  <p>■p88 L-5（中譯本處理錯誤）<br>
  原文：<font face="Fixedsys">filtering integer <font color="#FF0000">array</font> for 
  values greater than 8</font><br>
  更正：<font face="Fixedsys">filtering integer <font color="#0000FF">vector</font> for 
  values greater than 8</font><br>
  感謝：liux<br>
  日期：2001/11/03<br>
  <br>
  ■p94 L3（中譯本處理錯誤）<br>
  原文：<font face="Fixedsys">vector&lt;string&gt; svec<font color="#FF0000">.</font>res;</font><br>
  更正：<font face="Fixedsys">vector&lt;string&gt; svec<font color="#0000FF">_</font>res;</font><br>
  感謝：liux<br>
  日期：2001/11/08<br>
  <br>
  ■p3 L2（中譯本筆誤）<br>
  原文：<font face="Fixedsys">class hierachy</font><br>
  更正：<font face="Fixedsys">class hiera<font color="#0000FF">r</font>chy</font><br>
  感謝：Hfeng_zhu<br>
  日期：2001/12/22</p>
  <p>■p122,L-15（中譯本筆誤）<br>
  原文：<font face="Fixedsys">typedef existing_<font color="#FF0000">name</font> 
  new_name;</font><br>
  更正：<font face="Fixedsys">typedef existing_<font color="#0000FF">type</font> 
  new_name;</font><br>
  感謝：deng2001<br>
  日期：2001/12/22</p>
  <p>■p102,L-2（中譯本筆誤）<br>
  原文：該檔案通常和 class <font color="#FF0000">相</font>名<br>
  更正：該檔案通常和 class <font color="#0000FF">同</font>名<br>
  感謝：deng2001<br>
  日期：2001/12/25</p>
  <p>■p125,L-4（中譯本筆誤）<br>
  原文：_row = rhs._row; _col = rhs.col;<br>
  更正：_row = rhs._row; _col = rhs.<font color="#0000FF">_</font>col;<br>
  感謝：song qi<br>
  日期：2002/01/01<br>
  <br>
  ■p38,L8（中譯本筆誤）<br>
  原文：如果我將 elem 的型別改成 unsig<font color="#FF0000">en</font>d int<br>
  更正：如果我將 elem 的型別改成 unsig<font color="#0000FF">ne</font>d int<br>
  感謝：BILL_WFM<br>
  日期：2002/01/13</p>
  <p>■p30,L1（中譯本筆誤）<br>
  原文：fibonacci 和 empty() 兩字之間的<font color="#FF0000">逗號</font><br>
  更正：fibonacci 和 empty() 兩字之間的<font color="#0000FF">句點</font><br>
  感謝：zyt<br>
  日期：2002/01/25<br>
  <br>
  ■p50,L5（簡體版誤譯）<br>
  原文：配置一數<font color="#FF0000">目</font>組<br>
  更正：配置一數組<br>
  感謝：zyt<br>
  日期：2002/01/25<br>
  <br>
  ■p80,L-3（簡體版誤轉）<br>
  原文：可抹除 [first, last<font color="#FF0000">] </font>範圍內的元素<br>
  更正：可抹除 [first, last<font color="#0000FF">) </font>範圍內的元素<br>
  感謝：zyt<br>
  日期：2002/01/25<br>
  <br>
  ■p102,L5（中譯本筆誤）<br>
  原文：<font color="#FF0000">S</font>tack.push( str );<br>
  更正：<font color="#0000FF">s</font>tack.push( str );<br>
  感謝：zyt<br>
  日期：2002/01/25<br>
  <br>
  ■p189,L9（中譯本筆誤）<br>
  原文：clas template<br>
  更正：clas<font color="#0000FF">s </font>template<br>
  感謝：zyt<br>
  日期：2002/01/25<br>
  <br>
  ■p200,L4（中譯本筆誤）<br>
  原文：derefer<font color="#FF0000">nece</font><br>
  更正：derefer<font color="#0000FF">ence</font><br>
  感謝：zyt<br>
  日期：2002/01/25<br>
  <br>
  ■p273,L22（臺灣術語，簡體版未轉）<br>
  原文：取出<font color="#FF0000">指標</font><br>
  更正：取出<font color="#0000FF">指針</font><br>
  感謝：zyt<br>
  日期：2002/01/25</p>
  <p>■p29,倒數第二段（中譯本錯誤）<br>
  <strong>原文：<br>
  </strong>rand() 和 srand() 都是標準程序庫提供的所謂偽隨機數（pseudo-random 
  number）產生器。srand() 的參數是所謂隨機數產生器種子（seed）。要知道，每次呼叫 
  rand()，都會傳回一個介於 0 和「int 
  所能表示之最大整數」間的一個整數。現在<font color="#FF0000">，將隨機數產生器的種子（seed）設為 
  5，我們就可以將 rand() 的返回值</font>限制在 0 和 5 
  之間，以便成為本例的一個有效索引。這兩個函數的聲明式位於 
  cstdlib 頭文件中。<br>
  <br>
  <strong>更正：<br>
  </strong>rand() 和 srand() 都是標準程序庫提供的所謂偽隨機數（pseudo-random 
  number）產生器。srand() 的參數是所謂隨機數產生器種子（seed）。要知道，每次呼叫 
  rand()，都會傳回一個介於 0 和「int 
  所能表示之最大整數」間的一個整數。現在<font color="#0000FF">我們必須將該值</font>限制在 
  0 和 5 
  之間，以便成為本例的一個有效索引。這兩個函數的聲明式位於 
  cstdlib 頭文件中。<br>
  <br>
  感謝：佚失，很抱歉<br>
  日期：2002/02/15</p>
  <p>■第二章（英文版筆誤）<br>
  <strong>說明：<br>
  </strong>本章許多地方混用了 num_right 和 num_cor 兩個變數名稱，例如 p16 
  就有多處。這是作者的疏失。<strong><font color="#0000FF">為恐掛一漏萬，身為譯者的我並不打算修改之</font></strong>，請讀者注意。Lippman 
  的書常出現這類錯誤，著眼大處卻耽誤於小處。<br>
  感謝：zming<br>
  日期：2002/02/15<br>
  <br>
  ■p19,L15（英文版筆誤）<br>
  原文：Hmm. Sorry. Wrong <font color="#FF0000">again</font>.<br>
  更正：Hmm. Sorry. Wrong <font color="#0000FF">a second time.</font><br>
  說明：配合 p18 L-5 程式碼。<br>
  感謝：zming<br>
  日期：2002/02/15</p>
  <p>■p30,L-4（中譯本筆誤）<br>
  原文：ostream 對象<br>
  更正：o<font color="#0000FF">f</font>stream 對象<br>
  感謝：zming<br>
  日期：2002/02/15</p>
  <p>■p11,L16（中譯本筆誤） <br>
  原文：是所謂的條件運算子（coditional operator） <br>
  更正：是所謂的條件運算子（co<font color="#FF0000">n</font>ditional operator） 
  <br>
  感謝：mymonday <br>
  日期：2002/03/18 </p>
  <p>■p60,L-2（中譯本筆誤） <br>
  原文：在 fibon_elm() 定義式中，唯一 <br>
  更正：在 fibon_el<font color="#FF0000">e</font>m() 定義式中，唯一 <br>
  感謝：mymonday <br>
  日期：2002/03/18 </p>
  <p>■p125,L4（中譯本處理錯誤）<br>
  原文：Triangular tri( 20<font color="#FF0000">, 12</font> );<br>
  更正：Triangular tri( 20 );<br>
  感謝：Join Smith<br>
  日期：2002/05/31</p>
  <p>■p222,習題3.3（讀者來信討論）<br>
  說明：讀者kenshin81對本題解答很認真地做了學習和檢討，並將心得分享給大家。非常感謝。來函完整列出如附。<br>
  感謝：kenshin81<br>
  日期：2002/06/02<br>
  <font color="#000000">讀者來函：</font><font color="#408080"><br>
  侯老師﹕您好。我是上海交通大學的學生。<br>
  最近我買了您的譯作《Essential C++》（簡體版）。<br>
  在做書後習題3.3（P222~P225)時發現了一點問題。<br>
  我按照書上所附的解答輸入﹐編譯､執行後的結果如下﹕<br>
  Please enter a family name or q to quit <strong>ranier</strong><br>
  The ranier has 4 children: alphonse lou robert brodie<br>
  Please enter a family name or q to quit <strong>franz</strong><br>
  </font><font color="#FF0000">Sorry. The franz is not currently entered.</font><font
  color="#408080"><br>
  Please enter a family name or q to quit <strong>kafka</strong><br>
  Sorry. The kafka is not currently entered.<br>
  Please enter a family name or q to quit <strong>q</strong><br>
  </font><font color="#FF0000">The&nbsp; family has 1 children: franz</font><font
  color="#408080"><br>
  The lippman family has 2 children: danny anna<br>
  The mailer family has 2 children: tommy june<br>
  The orlen family has 1 children: orley<br>
  The ranier family has 4 children: alphonse lou robert brodie<br>
  The smith family has 3 children: john henry frieda<br>
  Press any key to continue<br>
  <br>
  與書上的結果不同﹐主要是 franz 出了問題﹐因為 franz 
  家庭沒有孩子﹗<br>
  我仔細看了代碼﹐覺得 populate_map() 函數有問題。原始代碼如下﹕<br>
  void populate_map( ifstream &amp;nameFile, map&lt;string,vstring&gt; &amp;families )<br>
  {<br>
  &nbsp; string textline;<br>
  &nbsp; while ( getline( nameFile, textline ) )<br>
  &nbsp; {<br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string fam_name;<br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vector&lt;string&gt; child;<br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string::size_type pos = 0, prev_pos = 0, text_size = 
  textline.size();<br>
  <br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while ( ( pos = textline.find_first_of( ' ', pos ) ) != 
  string::npos )<br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string::size_type end_pos = pos - prev_pos;<br>
  <br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ( ! prev_pos )<br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fam_name = 
  textline.substr( prev_pos, end_pos );<br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; child.push_back( 
  textline.substr( prev_pos, end_pos ) );<br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; prev_pos = ++pos;<br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>
  <br>
  </font><font color="#FF0000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ( prev_pos &lt; text_size )<br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
  child.push_back(textline.substr(prev_pos,pos-prev_pos));</font><font color="#408080"><br>
  <br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ( ! families.count ( fam_name ) )<br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; families[ fam_name ] = child;<br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cerr &lt;&lt; &quot;Opps! We 
  already have a &quot;<br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
  &lt;&lt; fam_name &lt;&lt; &quot; family in our map!\n&quot;;<br>
  &nbsp; }<br>
  }<br>
  <br>
  我注意到如果一個家庭沒有孩子（就像franz），那麼內嵌的那個 while 
  循環<br>
  while((pos = ... )）就不會執行。這樣的話按照上述代碼，這個家庭的 
  fam_name<br>
  就是一個空的 string﹐而它真正的家庭名則變成了這個家庭的唯一個孩子了<br>
  （這由兩個 if 語句所導致）。因此最後的結果才會出現<br>
  </font><font color="#FF0000">The family has 1 children: franz</font><font color="#408080"><br>
  和<br>
  </font><font color="#FF0000">Sorry. The franz is not currently entered</font><font
  color="#408080"><br>
  因為 map 裡沒有 franz 這個家庭索引。<br>
  <br>
  我將代碼改動了一下﹐把<br>
  </font><font color="#FF0000">if ( prev_pos &lt; text_size )<br>
  &nbsp;&nbsp;&nbsp;&nbsp; child.push_back(textline.substr(prev_pos,pos-prev_pos));</font><font
  color="#408080"><br>
  改為﹕<br>
  </font><font color="#0000FF">if ( prev_pos &lt; text_size )<br>
  &nbsp; if( prev_pos )&nbsp;&nbsp;&nbsp; //如果做過循環﹐則prev_pos不為0﹐就處理最後一個孩子<br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; child.push_back(textline.substr(prev_pos,pos-prev_pos));<br>
  &nbsp; else<br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fam_name = textline.substr( prev_pos, pos - prev_pos );<br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //prev_pos為0﹐說明該家庭無孩子﹐處理家庭名</font><font
  color="#408080"><br>
  <br>
  改後運行結果就與答案完全相同了。<br>
  我見老師的網站上的勘誤表上沒有上述這一條﹐不知道自己說得到底對不對。<br>
  望侯老師指正。謝謝。</font></p>
  <pre>■p33,L4
<font color="#408080">讀者來函：
    我買了先生出版的 Essential C++ 和 C++ Primer，其中有一段程式碼是這樣的
    （在 C++ Primer 1102頁，和 Essential C++ 1.7節內）

    #include &lt;fstream&gt;
    using namespace std;
    void main()
    {
      ...
      fstream io(&quot;word.txt&quot;, ios_base::in | ios_base::app);
      ...
    }

    編譯與連結皆無問題，但以 ios_base::in 和 ios_base::app 兩個參數所執行的
    io（fstream 物件）卻無法開啟 word.txt 並對它進行讀寫，我用的是
    VC6。這是 VC 的問題還是 C++ 本身語法中參數搭配的問題?

    之後我發現
    將此行程式碼改為如下
      fstream io(&quot;word.txt&quot;, ios_base::in | ios_base::app | ios_base::out );
    就能正常的開啟word.txt

    請幫忙解答，謝謝。這個錯誤是我上課時學生發現的，之後我再加以測試的結果。
</font>
侯捷回覆：
    我寫了一個小程式測試之，並加上註解，如下。

    #include &lt;fstream&gt;
    #include &lt;iostream&gt;
    using namespace std;

    int main()
    {
      // 註：書上只有 ios_base::in | ios_base::app
      fstream io(&quot;word.out&quot;, ios_base::in | ios_base::app <font
color="#0000FF">| ios_base::out</font>);
      if (!io) {
          cout &lt;&lt; &quot;can not open&quot;;
          exit(-1);
      }

      int i;
      io &gt;&gt; i;
      cout &lt;&lt; i &lt;&lt; endl;
      io &lt;&lt; 23;
      io &lt;&lt; 28;
      // 寫是寫了，將來如何讀出？因此還需總體格式上的考量。這裡不考慮那麼多。
    }

    /*
    注意，觀察檔案內容時，以 type word.out 是不準確的。
    應使用諸如 tdump.exe 之類的 binary dumper.

    在 VC6 中，無法正確開起檔案，除非加上 ios_base::out。
    但即使加上 ios_base::out，也無法順利 append.

    在 CB5 中，可順利開啟檔案並讀資料，但卻無法順利而正確地 append，
    必須加上 ios_base::out 才可順利 append。

    在 G291 中無法編譯。
    */

感謝：Tse-Chen Yeh
日期：2002/12/13</pre>
  <p>-- the end </p>
</blockquote>
</body>
</html>
