<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=big5">
<meta name="GENERATOR" content="Microsoft FrontPage 3.0">
<title>精采絕倫的電腦彩色書與電子書</title>
<meta name="Microsoft Theme" content="construc 111, default">
<meta name="Microsoft Border" content="tl, default">
</head>

<body background="urbtextb.gif" tppabs="http://jjhou.boolan.com/urbtextb.gif" bgcolor="#FF9900" text="#330033" link="#009900"
vlink="#996600" alink="#FF0066">
<!--mstheme--></font>

<table border="0" cellpadding="6" cellspacing="0" width="750">
  <tr>
    <td width="116"><!--mstheme--></font></td>
    <td width="10"><!--mstheme--></font></td>
    <td width="501"><p align="center"><big><big><font FACE="細明體">發表日期 : 1994.02</font></big></big><!--mstheme--></font></td>
    <td width="2"><!--mstheme--></font></td>
    <td width="61"><!--mstheme--></font></td>
  </tr>
  <tr>
    <td valign="top" width="116" bgcolor="#C0C0C0"><font size="3" face="Arial"><br>
    </font><a href="review1-15.htm#書名 How Computers Work" tppabs="http://jjhou.boolan.com/review1-15.htm#書名 How Computers Work">How Computers Work</a><br>
    <br>
    <a href="review1-15.htm#書名 Windows API Bible" tppabs="http://jjhou.boolan.com/review1-15.htm#書名 Windows API Bible">Windows API Bible</a><br>
    <br>
    <a href="review1-15.htm#產品名 Microsoft Developer%27s Network" tppabs="http://jjhou.boolan.com/review1-15.htm#產品名 Microsoft Developer%27s Network">Microsoft Developer's 
    Network</a><br>
    <br>
    <a href="review1-15.htm#不吐不快 - 讓我們談談中譯本" tppabs="http://jjhou.boolan.com/review1-15.htm#不吐不快 - 讓我們談談中譯本">不吐不快 - 
    讓我們談談中譯本</a><!--mstheme--></font></td>
    <td width="10"><!--mstheme--></font></td>
    <td valign="top" width="501"><font FACE="細明體"><p align="center"><br>
    <font color="#0000FF">咱評書的一個原則是，<br>
    國內沒進口的書不評，<br>
    可是How Computers Work 太好了，<br>
    我忍不住打破這個原則。<br>
    <br>
    此外，本期有一本工具書、一片光碟、<br>
    一些牢騷和一些安慰。</font></p>
    <p>原本這個月我們的重頭戲是 David J.Kruglinski 的 Inside Visual C++，可是這本書實在巨大，包括量與質，因為要懂 
    Visual C++ 與 MFC，你得懂Windows 作業系統、Windows API Programming (一般說的 
    SDK Programming)，C++ 語言，MFC。不得了，金字塔頂端再插一根避雷針，就是這種身負絕技的人的位置。而我的原則是沒看完的書不評，看不懂的書不評 
    (我們談的都是技術，我自己不懂就別談了) 
    所以，晚個把月您才會看到我對它的介紹，這個月我們先看其他的。另外，做點廣告，我還會為您介紹 
    Kraig Brockschmidt 的Inside OLE2。C++/ClassLib 和 OLE2 
    兩個主題對我們國內資訊工業在 Windows 
    領域將有相當重大的意義，前者提升生產力位階，後者為軟體合作時代的來臨熱身，也為物件導向作業系統奠基，我目前能說的是，它非常非常...呃...非常的重要。</p>
    <p>說到評書原則，聯合報 1994/01/06 的讀書人 (每週四出刊) 
    有一篇文章「從評審倫理看非文學類書榜」，作者提到合理的一般性評書準則至少應 
    :</p>
    <p><font color="#0000FF">o. 自己沒有全部讀完的著作不推薦。<br>
    o. 縱使自己極端喜愛但超過擬想中的「中上程度讀者」的不推薦。<br>
    o. 
    學術著作固然重要，但導讀不好或範圍太僻者不推薦，應由相關學會出版物推薦。<br>
    o. 在缺乏基本公是公非的領域如傳記回憶錄類，應特別慎重。</font></p>
    <p>就這四點而言，侯捷的書評只符合一、三點。第四點在我們這個領域應該是不存在的(縱使我曾介紹過彈指乾坤-蓋茲微軟傳奇，下不為例)。</p>
    <p>這一期的主題不像以往那般單純集中，我們有一本介紹 PC 
    基礎觀念的 How Computers Work，一本工具書 Windows API Bible，以及一份技術資源Microsoft 
    Developer's Network (MSDN)。名稱雖為Network，卻和網路沒有關係，主要是一季一片的光碟資料。最後，雖然我從沒有提到過中文書，最近有兩本譯本表現出色，我很想表示我的看法。</p>
    <p>　</p>
<!--msthemeseparator-->    <p align="left"><img src="urbhorsa.gif" tppabs="http://jjhou.boolan.com/urbhorsa.gif"></p>
    <p><font color="#0000FF">背景資料 :<br>
    <a name="書名 How Computers Work">書名 How Computers Work</a><br>
    作者 Ron White (插圖設計 Timothy Edward Downs)<br>
    出版 Ziff Davis Press<br>
    頁數 32 章，202 頁<br>
    售價 US$ 22.95<br>
    磁片 無<br>
    <br>
    Part I : Boot-up Process<br>
    1. How the Power-On Self-Test Works<br>
    2. How a Disk Boot Works<br>
    3. How an Operating System Works<br>
    <br>
    Part II : Microchips<br>
    4. How a Transistor Works<br>
    5. How RAM Works<br>
    6. How a Microprocessor Works<br>
    7. How a RAM Cache Works<br>
    <br>
    Part III : Data Storage<br>
    8. How Disk Storage Works<br>
    9. How a Floppy Drive Works<br>
    10. How a Hard Drive Works<br>
    11. How a Disk Cache Works<br>
    12. How a CD-ROM Drive Works<br>
    13. How a Magneto-Optical Drive Works<br>
    14. How a Bernoulli Drive Works<br>
    15. How a Tape Backup Drive Works<br>
    16. How a Drive Array Works<br>
    <br>
    Part IV : Input/Output Devices<br>
    17. How a Bus Works<br>
    18. How a Keyboard Works<br>
    19. How a Computer Display Works<br>
    20. How a Serial Port Works<br>
    21. How a Parallel Port Works<br>
    22. How a Mouse Works<br>
    23. How a Modem Works<br>
    24. How a Scanner and OCR Works<br>
    25. How a Pen-Based Computer Works<br>
    <br>
    Part V : Networks<br>
    26. How LAN Topologies Works<br>
    27. How Network Communications Works<br>
    <br>
    Part VI : Printers<br>
    28. How Bitmapped and Outline Fonts Works<br>
    29. How a Dot-Matrix Printer Works<br>
    30. How a Laser Printer Works<br>
    31. How an Ink-Jet Printer Works<br>
    32. How a Color Thermal Printer Works</font></p>
    <p><img src="how-computers-work.jpg" tppabs="http://jjhou.boolan.com/how-computers-work.jpg" alt="how-computers-work.jpg (19771 bytes)"
    WIDTH="210" HEIGHT="264"></p>
    <p>咱評書的一個原則是，國內沒進口的書不評，避免隔靴搔癢，對讀者沒有直接幫助。可是這本書太好了，我忍不住打破這個原則。希望國內書商看到這份評介的話也能接洽引進。</p>
    <p>PC/Computing 雜誌從 1989 起有一個專欄叫做 How It Works，經過這麼多年，Ron 
    White 
    把許多人的心血重新整理，以圖說的方式介紹個人電腦，從開機到作業系統載入，從記憶體到磁碟，到各種週邊設備的運作原理，完成了這本 
    How Computers Work。本書背景資料的作者欄上特別註明插圖設計者，你就可以想像，圖片在本書佔的份量。這是一本內容和尺寸 
    (21.5x27.5 公分) 都像是畫刊的讀物，印刷精美，全彩，銅版紙 (我對紙張不在行，硬硬厚厚會反光的在我眼中都是銅版紙)。</p>
    <p>請你先瀏覽一下章節名稱。每一章一開始會有大約 1-2 
    頁的文字，然後就是以圖說的方式介紹電腦工作原理。我所謂的圖說是指每一個重要的動作都以一張圖表示，圖的下方有動作說明，好像看圖說故事，很容易閱讀吸收。就以 
    booting 為例，「BIOS 的 boot program 尋找 A 碟或 C 碟的 IO.SYS 和 MSDOS.SYS」是一張圖，「載入 
    DOS boot record 到 7C00 位址」是一張圖，「boot record 載入 IO.SYS」是一張圖，「IO.SYS 
    中的 SYSINIT 載入 MSDOS.SYS」又是一張圖；「SYSINIT 讀取 config.sys」是一張圖，「SYSINIT 
    載入 COMMAND.COM」又是一張圖，「COMMAND.COM 的暫存部份放在 640KB 
    最尾端」是一張圖，「COMMAND.COM 讀入 autoexec.bat」又是一張圖。上述這些步驟完整描述 
    booting 
    過程，第二章就以這八張圖充份說明檔案在磁碟中的位置以及資料在 
    CPU 和磁碟和 RAM 
    之間的流動方向。由於是彩色印刷，完全克服一般書籍以陰影、網底表現顏色時不夠明顯的缺點。MS-DOS 
    作業系統啟動過程並不是沒有人好好提過，Ray Duncan 的Advanced MS-DOS 
    Programming 第二章「運轉中的 MS-DOS」就巨細靡遺，可是即使是名家文筆也比不上這種全彩、具象、圖文合一的解說方式。</p>
    <p>不是每一個主題都把一個個小步驟切為一張張的圖。例如第三章，作者解釋作業系統如何工作，他以從應用軟體中印出一份報表為例，用了兩張跨頁圖片說明 
    11 
    個步驟，每一個步驟都標上序號，黑色箭頭把說明文字和圖上動作牽連在一起，讓圖文須臾不分離。這些圖片我只能以精采絕倫來讚美它。</p>
    <p>本書從開機的自我測試 (POST) 講起，然後是 MS-DOS booting，記憶體佈局，軟硬體搭配，電晶體原理，隨機存取記憶體 
    (RAM)，中央處理器 (CPU)，記憶體快取緩衝區(Memory Cache)，磁片為什麼能夠貯存資料，讀寫頭的作用，磁片為什麼要格式化，軟碟與硬碟的機構 
    (Downs 把內部的彈簧、螺絲、卡榫、機械臂都畫出來了)，磁碟快取緩衝區 
    (Disk Cache)，光碟機光碟片原理，磁帶機原理，以及各種週邊設備如滑鼠、鍵盤、掃描器、擴充卡、顯示器 
    (包括三槍與液晶)、序列埠、平行埠、數據機、筆式電腦。有一個單元講網路。最後一個單元是印表機，包括矩陣字形、描邊字形、撞擊式印表機、雷射印表機、噴墨印表機、熱感式印表機。</p>
    <p>看完這本書我才了解每天為我做牛做馬的雷射印表機是如何複雜又精密地一邊解讀由電腦傳來的控制命令，一邊發出雷射光；一邊轉動稜鏡使雷射光打在感光鼓的水平線上讓感光鼓帶負電，同時一邊又捲動紙張並加上正靜電；感光鼓一邊通過一個含有碳粉的貯存室並吸附碳粉，一邊又在與紙張接觸時使碳粉附著在電量比較強的紙張上；感光鼓繼續轉動通過另一裝置除去負電，另一端的滾軸拉出紙張並以壓力和高熱使碳粉中的蠟融化結合到紙張上。我甚至還可以隨手為你畫下雷射印表機內部元件的相關位置呢。不知道底細的人一定以為我是雷射印表機的專業技術人員，喔，沒有什麼，我只不過是花了 
    15 分鐘把第 30 章用心看過一遍而已。</p>
    <p>現在我不但了解每天被我敲擊上萬次的鍵盤硬體原理，也終於了解為什麼桌上那隻大笨鼠進入 
    Windows 之後就半身不遂 (只會垂直動，不能水平動)。我也知道了 CD-ROM 
    的馬達轉速不固定，光碟片的 sector 
    不是同心圓而是螺線圈，以及光碟片為什麼容量比磁碟片大；我知道了讀寫頭如何把磁片上的鐵粉規則排列以記錄 
    0 與 1，為什麼 Disk Cache 可以大幅提升磁碟效率；我能夠分辨什麼是 
    ISA Bus，什麼是EISA but，什麼是 local bus；購買顯示卡時再也不會被交錯式/非交錯式規格困惑了。連非科班出身的我也對 
    address line、data line、電晶體、電容器有了一知半解。你看，我已經成了桌上型電腦的半個專家，至少對 
    85% 的PC 硬體可以侃侃而談沒有問題，而成為半個專家的代價才美金 
    22.95，秀啦。還有什麼更好的機會讓我們一次學習這麼多我們每天接觸卻多半不知其所以然的器物呢 
    ? 讀完此書你的知識足以和任何一位 PC 
    硬體專家交談。雖只是交談，在分工精密的現代社會裡，我們還奢求什麼 
    ?</p>
    <p>這本書讓我想起小時候讀過<font color="#0000FF">東方出版社</font>的幾本兒童讀物，名稱已經忘記了，內容是講日常生活中各種事物的原理或它們的由來，譬如說木炭是怎麼製造的，汽車如何動起來，各種船舶的區別與用途...，後來我才發現那是日本人的作品；我手中有兩本西洋美術史，一本正經八百，一本以漫畫方式進行，雖然後者比較粗淺一點，但絕絕大部份的人都喜歡看後者，那也是日本人的作品 
    (日本人在這方面有非常好的表現)；小時候我還看過一本圖畫聖經，非常有趣，畫面以及故事到現在都還可以回想起來。這些有趣的導引對讀者的影響十分重大，重大到影響繼續學習的意願 
    (如果並不攸關生計的話)。我們國內的名作家好不好在奮不顧身拼命投入 
    DOS 使用手冊撰寫之餘，嘗試這種意義重大的工作 ?</p>
    <p><img src="history-of-art.jpg" tppabs="http://jjhou.boolan.com/history-of-art.jpg" alt="history-of-art.jpg (24203 bytes)" WIDTH="195"
    HEIGHT="264"></p>
    <p>　</p>
    <p>言歸正傳。本書美中不足的是，軟體著墨不多。電腦由硬體與軟體構成，所以 
    How Computers Work 也應該提到軟體。如果再補上一本 How Software Works，介紹更多的作業系統觀念 
    (強制性多工、虛擬機器、虛擬記憶體、動態聯結...)，記憶體破碎、磁碟空間離斷、病毒、檔案壓縮原理，乃至於編譯器、聯結器、的功用，OBJ 
    檔 EXE 
    檔的格式與設計著眼，那就太完美了。這一方面我倒是建議一份好資源 
    : PC Managize 的 [Tutor] 
    專欄。此專欄每篇三兩頁，通常都有些很不錯的示意圖，曾經刊載過的相關題目有 
    :</p>
    <p></font><font color="#0000FF">o. Exploring the DOS Environment (1993/01/12)<br>
    o. Answers to Five Common Questions About Hard Disks (1993/02/23)<br>
    o. A Day in the Life Of a Window (1993/03/16)<br>
    o. Viruses : How They Work and How to Avoid Them (1993/03/30)<br>
    o. The Truth About Free System Resource (1993/04/13)<br>
    o. Hidden Gold in DOS 5.0 (1993/04/27)<br>
    o. Unlocking the Mysteries of CHKDSK (1993/05/11)<br>
    o. Understanding Data Compression (1993/05/25)<br>
    o. Deleting and Undeleting Files From Your Disk (1993/06/15)<br>
    o. How DOS Programs Can Use Over 1MB of RAM (1993/06/29)<br>
    o. Why You Should Defragment Your Disk (1993/07)<br>
    o. Maximizing Memory Under DOS 6.0 (1993/08)<br>
    o. Using the DOS 6.0 Antivirus Tools (1993/09/14)<br>
    o. DOS 6.0's DoubleSpace : Is It Safe ? (1993/11/23)</font><font FACE="細明體"></p>
    <p>追註: 話說早了，我在廣告上看到還真有 How Software Works 
    呢，等我買來看完一定再向大家介紹。此外這一系列的書還有 How 
    Networks Work，How Macs Works，How To Use Your Computer，All About Computers。</p>
    <p>　</p>
<!--msthemeseparator-->    <p align="left"><img src="urbhorsa.gif" tppabs="http://jjhou.boolan.com/urbhorsa.gif"></p>
    <p><font color="#0000FF">背景資料 :<br>
    <a name="書名 Windows API Bible">書名 Windows API Bible</a><br>
    作者 James L. Conger<br>
    出版 White Group Press<br>
    頁數 30 章，1014 頁<br>
    售價 39.95<br>
    磁片 無<br>
    <br>
    Introduction<br>
    1. Overview of Windows Programming<br>
    2. Creating Windows<br>
    3. Windows Support Functions<br>
    4. Menus<br>
    5. Scroll Bars<br>
    6. Mouse and Curosr Functions<br>
    7. Keyboard Support<br>
    8. Message Processing Functions<br>
    9. Windows Messages<br>
    10. Device Contexts, Text Output, and Printing<br>
    11. Painting the Screen<br>
    12. Color Palette Control<br>
    13. Dialog Boxes<br>
    14. Memory Management<br>
    15. Bitmaps<br>
    16. Icons<br>
    17. The Clipboard<br>
    18. Sound Functions<br>
    19. Character Sets and Strings<br>
    20. MS-DOS and Disk File Access<br>
    21. Communications Functions<br>
    22. Atom Functions<br>
    23. Metafiles<br>
    24. The Timer<br>
    25. Resources<br>
    26. Execution Profiling and Debugging<br>
    27. Help File Support<br>
    28. Dynamic Link Libraries<br>
    29. Multiple Document Interface (MDI)<br>
    30. Dynamic Data Exchange (DDE)<br>
    Appendix A Bibliography and Sources of Additional Information<br>
    Appendix B Useful Macros from WINDOWS.H<br>
    Appendix C Mouse Hit Test Codes<br>
    Appendix D WINDOWS.H Listing<br>
    </font></p>
    <p><img src="winapi-bible.jpg" tppabs="http://jjhou.boolan.com/winapi-bible.jpg" alt="winapi-bible.jpg (20345 bytes)" WIDTH="214"
    HEIGHT="264"></p>
    <p>還記得 1993/04 我介紹過 Ralf Brown &amp; Jim Kyle 的PC Interrupts 一書嗎 ?! 
    本書與之等量齊觀，都是極好的工具書。敢把自己的書名叫做 Bible 
    或是 Art 
    的人，不是學富五車信心十足並且實至名歸，就是流於笑柄而後像泡沫般消失在眾人銳利的眼光下。前者居多!</p>
    <p>這本書大致可以分為幾個部份。第一章是 Windows 
    新生訓練，第二章到第五章是關於視窗的產生以及功能表單和捲動桿，第六章到第九章涵蓋 
    Windows 
    各種訊息，第十章到第十二章談螢幕和印表機輸出；其餘各章則是各式各樣的主題。<br>
    <br>
    每一章都說些什麼呢 ? 
    一開始作者會對該章主題做一些觀念性的解釋，例如十一章 Painting 
    the Screen，一開始作者告訴我們這一章介紹的是關於四方形、直線、橢圓形、多邊形、以及區域 
    (region) 的 API 函式，然後解釋在螢幕繪圖方面最需注意的WM_PAINT 訊息 
    (這訊息特立獨行，行蹤蹊蹺)，Device Context 和 Drawing Object 的觀念，RGB() 
    顏色值的組成，region 的意義 (所謂 region 
    是任何可以用為繪圖邊界的區域，可由任何二維幾何形狀以 
    AND,OR,XOR,NOT 等運算組合起來)，再來就是各 API 
    的語法、參數、使用說明、相關函式名稱，以及一小段範例碼 --- 
    不是完整的 Windows 程式，只是 WndProc()。作者設計一個樣板程式，功能表單上只有 
    [Do It!] 和 [Quit] 兩項目，各個 API 範例的 WndProc() 
    放進樣板程式中就成為該 API 的完整程式例。稍稍有些 Windows 
    程式經驗的人就知道怎麼把你要的東西剪下來加到自己的程式中。大部份的 
    API 
    範例執行結果都會以一張視窗硬拷圖表示之，這將使學習效率大增，尤其是 
    GDI 函式的各種繪圖動作。</p>
    <p>那麼像 'Raw DDE' 這樣的主題該怎麼辦 (Raw DDE 是純以 DDE 訊息和 DDE 
    資料結構完成的動態資料交換，有別於以高階 DDEML 完成者) ? 
    程式員只有兩個非常低階的的武器可用 : SendMessage() 和 PostMessage() (這老讓我想起「執白梃以撻堅甲利兵」這句話)，因此第三十章介紹的就不是 
    API 而是四個 DDE 結構和九個 DDE 訊息的意義與使用方式。</p>
    <p>對於有相當經驗的 Windows 
    程式員，視窗的產生或滑鼠的輸入這種基本題目必然引不起他們的興趣，本書的 
    Message Hook、DDE、Sound、Communication (RS232)、Color Palette、Help File、DLL、MDI 
    應該是頗具有吸引力的。只可惜本書出版時間正值 Windows 3.1 Beta 1 
    剛出來，所以一些在 Windows 3.0 屬於未公開而在 Windows 3.1 已公開的 API 
    並沒有列入書中，像是記憶體管理中的 GetSelectorBase()、SetSelectorBase()、GetSelectorLimit()、SetSelectorLimit()、AllocSelector() 
    等等，而 Windows 3.1 新的功能模組如 OLE、DDEML、TrueType 
    當然也是付之闕如。非常令人高興的是作者Conger 
    已經著手進行這一部份，準備單獨另外成立一冊，令人不高興的是等了很久了還是沒看到。</p>
    <p>做為一本工具書，如何設計的讓讀者輕鬆愉快找到他要找的東西，是頂重要的事。這本書將 
    API 以功能劃分，但也有另一份目錄是以 API 
    函式名稱的字母順序為查閱索引，堪稱便利。除了 API，Windows 
    訊息以及各種 control 的 notification 
    訊息也都在它的索引和說明範圍內。對於一個整天勞累 (案牘勞形於 
    Windows 程式設計) 的人來說，這本 1000 頁的大傢伙的出現實在是...啊...福氣啦。</p>
    <p>　</p>
<!--msthemeseparator-->    <p align="left"><img src="urbhorsa.gif" tppabs="http://jjhou.boolan.com/urbhorsa.gif"></p>
    <p><font color="#0000FF">背景資料 :<br>
    <a name="產品名 Microsoft Developer's Network">產品名 Microsoft Developer's Network</a><br>
    出版 Microsoft<br>
    形式 News, CD 碟片<br>
    入會費 NT$ 6150/Year (可向 Microsoft Taiwan 洽詢)</font></p>
    <p>電子書大行其道的日子還有多遠 ? 
    恐怕不遠了。昨天民生報的一篇「繁華落盡 
    獨留遺老說鉛排」，我們看到作家對於鉛字印刷的獨特感情:『美觀，有立體感，鉛字加油墨使字體看起來特別活』，這些話道盡一位作家對自己作品的感情濃篤甚至移情到了用以表現他心血的印刷與紙張上，我們也感受了文學作家纖細的情感。只是由鉛字排版轉變為電腦排版，作家尚且唏噓不已，如果他們知道電子書，想必大罵人心不古。</p>
    <p>我也喜歡黑紙白字的感覺，喜歡油墨的香味，喜歡用紅筆在上面畫重點寫心得，但是電子書容量大又提供全文檢索，用在工程界和科學界有其無可比擬的優點。</p>
    <p>Microsoft Developer's Network 
    就是一本電子書。這樣說還不夠，它其實是個會員組織，而會員最重要的收穫是每一季得到一張光碟片 
    (以下就以 MSDN 代表這張光碟片)，內含 Microsoft 
    大大小小產品的使用手冊與技術手冊 (包括 Windows、Windows for Worgroup、SDK/DDK、Visual 
    C++、Visual Basic、Excel、Word...)，各種 Microsoft 
    技術文件、範例程式、客戶問答，Microsoft Systems Journal 期刊內容，Charles 
    Petzold 經典著作 Programming Windows 3.1 全文。</p>
    <p>這麼說我想大家已經很明白 MSDN 
    是怎麼樣的一座寶庫了。資料多不見的好，MSDN 
    提供全文檢索才是好。MSDN 安裝時會在你的 Program Manager 建一個 group 
    並放入一個小icon，當你進入 MSDN 檢索系統，有三個視窗供你差遣 (圖1)。Index 
    視窗就是整片光碟的目錄，以樹狀結構表示出整個 600 MB 
    資料。由於主題太多，Index 視窗的目錄也和 Windows File Manager 
    的磁碟目錄一樣，是可以展開或收縮的。最上層的目錄是 :</p>
    <p><font color="#000000">o. Welcome<br>
    o. Technical Articles<br>
    o. Sample Code<br>
    o. Specs and Strategy<br>
    o. Knowledge Base and Bug Lists<br>
    o. Books and Periodicals<br>
    o. Product Documentation<br>
    o. Product Tools and Utilities<br>
    o. Unsupported Tools and Utilities<br>
    o. Conference and Seminars</font></p>
    <p>你可以從這目錄層層探索下去直到最後的資料所在，然後快按兩下把文章抓到Viewer 
    視窗。Viewer 
    視窗供你慢慢觀賞文字內容，也允許你把資料放到剪貼簿上，或是經由印表機輸出。基本上 
    Viewer 視窗很像 Windows 的 Help 視窗，此外它還有一個 [BookMark] 
    按鈕讓你在文章中做記號。這些文章都是 HyperText 
    形式，如果你看到某一個關鍵字是綠色有底線的，就可以快按兩下取其更進一步的解釋。</p>
    <p>至於全文檢索，就得動用 Search 視窗了。你可以在 [Query] 
    項填入索引關鍵字，可以在 [Range] 項設定搜尋的範圍 (Windows 或 C++ 或 
    DOS 或...)，檢索系統會把所有符合條件的文章標題都抓出，列在 Search 
    視窗中供選擇，並且告訴你一共找到幾篇資料。</p>
    <p>Tech Article 這一區的文章常會帶著範例程式，當你在 Viewer 
    視窗觀看內容，你將看到文章一開始告訴我們這文章的範例程式是哪一個 
    (path\filename)，不必自己從光碟片中拷貝出來到硬碟，只要按下 [Copy] 
    鈕，一切 OK。Microsoft 十分大方，這些範例程式都有下面聲明 :</p>
    <p></font><font color="#0000FF">COPYRIGHT:</font></p>
    <p><font color="#0000FF">(C) Copyright Microsoft Corp. 1992. All rights reserved.</font></p>
    <p><font color="#0000FF">You have a royalty-free right to use, modify, reproduce and 
    distribute the Sample Files (and/or any modified version) in any way you find useful, 
    provided that you agree that Microsoft has no warranty obligations or liability for any 
    Sample Application Files which are modified.</font><font FACE="細明體"></p>
    <p>MSDN 的資料實在太豐富了，而這只是 Level 1，Level 2 尚包括作業系統 
    (DOS、Windows、Windows For Workgroups、Windows NT)，各種開發工具 (Windows 
    SDK/DDK、Win32 SDK，NT DDK、OLE 2.0 SDK、Video for Windows SDK...)，我真的不能夠想像世上還有這等便宜事了，年費才 
    NT$ 15590。可惜就缺 Visual C++ 和 Visual Basic，啊不不不，貪心不足蛇吞象，我不可以這麼貪心。</p>
    <p>不過，說真的，資料多又有檢索系統還是不夠好，你真正花時間到裡面去尋寶才算好。仔細看看，商人和政客都喜歡在他們的書房接受訪問，再仔細瞧瞧，仔細一點，那些書都很新呢 
    !!!</p>
    <p>　</p>
    <p><a name="不吐不快 - 讓我們談談中譯本"><strong><font color="#FF0000">不吐不快 
    - 讓我們談談中譯本</font></strong></a></p>
    <p>中譯本對我們的資訊教育佔有重要一席，不曾接觸過中譯本者幾稀。早期的翻譯事業就像家庭代工一樣，是兼差，是貼補家用的副業。只要你敢，出版社可沒有什麼不敢的。於是，我唸書時的室友從另一位朋友 
    (大包) 接到了一筆生意 (小包)，譯了一本 C 
    語言書籍中的三章，而他從沒寫過 C 程式 !! 
    你一定會奇怪，這樣的書怎麼有人買 ? 
    有的，有些出版社搶時機，反正那是個海盜年代，不需授權，先出先贏，贏了就走。還有出版社打出「你抓蟲我出錢」的口號，抓出錯字別字或誤謬處則以多少多少元計。天啊，讓讀者大眾為他校對，又得到「提供獎學金」的美名；如果這出版社向以嚴謹著稱，那我們說它非常負責任，可這出版社向以...呃...不嚴謹著稱。</p>
    <p>兼具信達雅的好譯本需要譯者的技術實力和文筆。後者我們不敢奢望，但盼擁有前者就阿彌陀佛了。但是這兩者通常有微妙關聯，如果譯者懂得原文書在講什麼，他就比較能夠消化為中國人的思想寫出來。看看這一段 
    :</p>
    <p><font color="#0000FF">於目錄名單欄中的目錄上輕按滑鼠左鍵二下開啟是一種捷徑。則在檔案名稱欄中的完整檔名會被選取，並輸入新的檔名，而一旦您開始鍵入，則已存在的檔名就會被清除。</font></p>
    <p>這不是最糟的，再看這個 :</p>
    <p><font color="#0000FF">如何輸入縮排設定之文章段落建立人個文書處圖形或者是選擇早已存在之圖形。按下 
    &quot;內部&quot; 
    的按鍵插入點就會出現。假如您想要應用此一縮格尺度於圖表中之所有段落內容。於文章段落之起點按一下。假如您只想將此一縮排置設定， 
    │應用於文章段落中之某部份，那麼就在您要執行縮排設定的地方按一下。</font></p>
    <p><font color="#0000FF">文章落標準尺並不需要被看見，但是果您想要...</font></p>
    <p>別懷疑我打錯字或打錯標點符號，此乃一字不差錄自原譯本。我們忍不住掩卷嘆息。很快我就可以歸納幾個翻譯上的大問題 
    :</p>
<!--mstheme-->    </font><!--msthemelist--><table border="0" cellpadding="0" cellspacing="0" width="100%">
<!--msthemelist-->      <tr>
<!--msthemelist-->        <td valign="baseline" width="42"><img src="urbbul1a.gif" tppabs="http://jjhou.boolan.com/urbbul1a.gif" width="20" height="20"
        hspace="11"></td>
        <td valign="top" width="100%">'則'、'其'、'的' 
        虛字亂用，讀起來非常不舒服。這要怪譯者的國學水準。<!--mstheme--></font><!--msthemelist--></td>
      </tr>
<!--msthemelist-->      <tr>
<!--msthemelist-->        <td valign="baseline" width="42"><img src="urbbul1a.gif" tppabs="http://jjhou.boolan.com/urbbul1a.gif" width="20" height="20"
        hspace="11"></td>
        <td valign="top" width="100%">標點符號亂標，乾脆全用句號算了。這一點譯者的國學水準可倒高的出奇， 
        古意盎然 --- 翻開古文觀止，每篇文章全都只有句號沒有逗號。<!--mstheme--></font><!--msthemelist--></td>
      </tr>
<!--msthemelist-->      <tr>
<!--msthemelist-->        <td valign="baseline" width="42"><img src="urbbul1a.gif" tppabs="http://jjhou.boolan.com/urbbul1a.gif" width="20" height="20"
        hspace="11"></td>
        <td valign="top" width="100%">以英文方式講中文。這要怪譯者不用心，我不相信中國人是這麼說話的。<!--mstheme--></font><!--msthemelist--></td>
      </tr>
<!--msthemelist-->      <tr>
<!--msthemelist-->        <td valign="baseline" width="42"><img src="urbbul1a.gif" tppabs="http://jjhou.boolan.com/urbbul1a.gif" width="20" height="20"
        hspace="11"></td>
        <td valign="top" width="100%">別字、錯字、漏字、顛倒字一大堆。別說七校了，恐怕一校也沒有。<!--mstheme--></font><!--msthemelist--></td>
      </tr>
<!--msthemelist-->      <tr>
<!--msthemelist-->        <td valign="baseline" width="42"><img src="urbbul1a.gif" tppabs="http://jjhou.boolan.com/urbbul1a.gif" width="20" height="20"
        hspace="11"></td>
        <td valign="top" width="100%">名詞不統一，這要怪教育部。<!--mstheme--></font><!--msthemelist--></td>
      </tr>
<!--msthemelist-->      <tr>
<!--msthemelist-->        <td valign="baseline" width="42"><img src="urbbul1a.gif" tppabs="http://jjhou.boolan.com/urbbul1a.gif" width="20" height="20"
        hspace="11"></td>
        <td valign="top" width="100%">...<!--mstheme--></font><!--msthemelist--></td>
      </tr>
<!--msthemelist-->    </table>
    <p>不能再講了，我的收縮壓已達 220 毫米汞柱高。</p>
    <p>　</p>
    <p>依我之見，國內的電腦中譯本分為四個等級 :</p>
    <p><font color="#FF0000">非常爛!</font> 
    肯定譯者自己也不知道自己在譯什麼。做出來的成績與翻譯機的品質 
    差可比擬，因為中國人不可能寫出那種中文。</p>
    <p><font color="#FF0000">普通爛!</font> 
    情況撲朔迷離，譯者有點懂又不是很懂，所以有些地方勉強可以接受， 
    卻也會出現把 &quot;Expanded Memory&quot; 譯為「擴展的記憶」這種情況。</p>
    <p><font color="#FF0000">還不錯!</font> 
    譯者懂得其中技術，忠實對待原著，平實呈現出來。我手頭上有一本 
    <font color="#0000FF">高等 MS-DOS 技術手冊</font> (儒林出版，李心權胡乃聖譯)，算是不錯的了。</p>
    <p><font color="#FF0000">佳作!</font> 
    譯者對原著下過苦工，文筆平順；對於原著中的論點或程式願意測試， 
    並加上個人意見，等於是將自己的經驗和心得一併提供給讀者參考。旗標出版 
    的 <font color="#0000FF">Undocumented Windows</font> <font color="#0000FF">和</font> <font
    color="#0000FF">Windows 3.1 : A Developer's Guide 中譯本</font>可以登上此一榮階 
    (中譯本書名分別為 <font color="#0000FF">Windows 未公開的祕密</font>和 <font
    color="#0000FF">Windows 程式設計實務 進階篇</font>)。據我所知，旗標對於 
    Undocumented Windows 的翻譯就投注了 13 個人月，手筆堪稱不小。</p>
    <p>過去開發中時期的林林總總其實不必再提，我們的省主席也曾經喊過「客廳即工廠」的口號，成長過程中永遠先顧肚子再顧環保。可是如果已經納入已開發隊伍，這方面還是原地踏步，那就是自取其辱。期望國內出現更多佳作。一本好書被一支糟糕的譯筆糟蹋，就像把 
    800 年前的宋汝窯蓮花碗拿來盛狗食或 3000 
    年前的西周毛公鼎拿來裝垃圾一樣罪過，任何人都不忍。</p>
    <p>可我還是有些意見。</font><font FACE="細明體" color="#0000FF">Windows 
    未公開的祕密</font><font FACE="細明體">說翻譯原則之一是「跳過某一段不譯 
    : 對於那些重複嘮叨、言不相干的部份，必定予以刪除!」。我有個朋友念政治，有一次我問他一個所謂好政府，是要聘一大堆專家學者，制定一大堆專家學者認為的好制度給人民呢 
    ? 
    還是應該冒可能的風險，讓人民自行投票自行決定命運，自我判斷自我取捨 
    ? 我的政治學朋友喜歡後者，我也喜歡後者。&#26;</font><!--mstheme--></font></td>
    <td width="2"><!--mstheme--></font></td>
    <td valign="top" width="61"><!--mstheme--></font></td>
  </tr>
</table>

<p>　</p>
<!--mstheme--></font>
</body>
</html>
