<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>

<head>
<meta content="text/html; charset=big5" http-equiv="Content-Type">
<meta content="Microsoft FrontPage 3.0" name="GENERATOR">
<title>《深入 Visual C++ 4.0》</title>
</head>

<body background %22bgColor=-#ffffff%22%22 tppabs="http://jjhou.boolan.com/bgColor=%22#ffffff%22" text="#000000">

<hr>

<h2 align="center"><font color="#808080"><strong><small><small>累計印量 7400 + 740 冊&nbsp;&nbsp;</small></small></strong></font></h2>

<h2 align="center"><font color="#800000">《深入 Visual C++ 4.0》<br>
<small>Inside Visual C++ 4.0</small></font></h2>

<h2 align="center"><font color="#800000"><small>侯捷 譯</small></font></h2>

<p align="center"><img src="vc40.jpg" tppabs="http://jjhou.boolan.com/vc40.jpg" width="239" height="288"
alt="vc40.jpg (16821 bytes)"></p>

<p align="center"><a name="【勘誤】" href="errata-inside-vc40.htm" tppabs="http://jjhou.boolan.com/errata-inside-vc40.htm" target="main"><font
color="#0000FF">勘誤</font></a></p>

<hr>

<blockquote>
  <p><a name="【基本資料】"><font color="#FF0000">【基本資料】</font></a><br>
  <br>
  書名：<font color="#0000FF">深入 Visual C++ 4.0</font><br>
  出版：碁峰，1996.06<br>
  ISBN：957-641-778-3<br>
  頁數： 29 章，912 頁<br>
  定價：NT$ 860.0<br>
  <br>
  原著：<font color="#0000FF">Inside Visual C++ 4.0</font><br>
  原著作者：David Kruglinski<br>
  原著出版：Microsoft Press, 1996<br>
  原著ISBN：1-55615-891-2<br>
  原著定價：US$ 45.00<br>
  </p>
  <p><a name="【譯序】"><font color="#FF0000">【譯序】</font></a></p>
  <font FACE="華康粗圓體"><p ALIGN="CENTER"><big><big>譯　序</big></big></font><font
  FACE="新細明體"></p>
  <p></font><font size="3">真是十分有趣的一件事情。Windows 版本換了，Visual 
  C++ 版本換了，<i>Inside Visual C++ </i>版本換了，<i>Inside Visual C++</i> 
  的中譯版權擁有者也換了。</p>
  <p ALIGN="JUSTIFY">譯者沒換。呼！<i></p>
  <p ALIGN="JUSTIFY">Inside Visual C++ 4.0</i> 延續其前版（針對 VC++ v1.5 
  而作）的風采，並以相當迅速的腳步跟上軟體的改版時機。從 v1.5跳到v4.0，改版動作不可謂不大；如果我們把Visual 
  C++畫分出整合工具、C++ 語言、MFC三大部份，無疑本書關心的是第三部份 
  -- 畢竟這是一本焦點放在如何以MFC開發Windows應用程式的書籍。所以，舉凡多執行緒、DAO、Win95通用控制元件、OCX等等MFC的新增支援能力，都涵蓋在本書範圍內；而語言的加強（如 
  Standard Template Library，STL) 
  就沒有納入本書之中。至於整合工具的改善，隨著本書各專案的開發，你當然多多少少可以知道其概括。</p>
  <p ALIGN="JUSTIFY">一直希望為我們的電腦書籍翻譯事業盡一份力，也曾說過打算在自己技術背景所能掌握的領域，挑選（呃，如果有機會的話）重量級作品中文化。本書原著地位不必贅言，上一版譯作也廣獲好評。一位同時擁有原文書和中譯本的讀者告訴我，他把原文書送給了索書的學弟，把中譯本留給自己。 
  中譯本原就該獲得這種對待（不然做它幹嘛？），但我還是感覺無以名狀的欣慰。也是因為上一本書的品質，使我榮獲母校邀請，對外文系學弟妹們演講「科技翻譯」並開課程。（啊呀，自己知道斤兩不足，所以開課的事情就婉謝了）</p>
  <p ALIGN="JUSTIFY">一本譯作帶來這樣的回應，讓所有心有所執不求近利的人，獲得很大的肯定。我得承認，由我來負責書籍中譯工作，成本很不低；出版商願意花大成本做翻譯書，是好現象，也是我一直希望推動起來的一個觀念：翻譯絕對不應該是學生打工、出版社做短線投機的一件事。我並沒有「學生不可以做」或「學生不適合做」的意思，而是，出版社不可以認定學生很廉價，學生也不應該認定自己很廉價。把翻譯這件事建築在「很廉價、輕鬆嘛、儘量快、無所謂啦」的心理基礎上，就不可能得到好品質。我不相信作者花了一年功夫寫出來的心血，譯者可以在兩個禮拜內譯好。一個禮拜的例子我也聽過不少，呵呵。</p>
  <p ALIGN="JUSTIFY">讓我談點我對翻譯的態度與作法。</p>
  <p ALIGN="JUSTIFY">基本上我所抱持的原則是：忠於原著的精神，所以意譯而非字譯；忠於原著的內容，所以不刪減原著篇幅。另外，我會在原書的邏輯過程中比較突兀的部份（當然這是主觀認定）或是需要補充的地方加上註解。你會看到不少譯註，有的在文字之中，有的獨立為一小方塊。船過無痕地把註解與心得融入原來文字，也是很好的方式，我之所以標明譯註，一方面提醒已有原文書的讀者，一方面為了文責自負。至於原書的筆誤，就直接改過來不另外說明（這樣的小錯誤大約也有十數個）。</p>
  <p ALIGN="JUSTIFY">朋友問我，身為一個具創作力的作者，為什麼要花這麼多時間這麼大精力做翻譯工作？事實上我不但譯這本書，也同意了兩本有關於OLE的大書翻譯計畫。這些大部頭而且份量奇重的高階技術書籍，嚴重地影響了我自己的寫作（還有生活），但是我高興，因為，譯作和著作在我心底頭的份量是一樣的。沒有意義的重複性工作不可能吸引我，這些好書相當程度地彌補了我自己作品的不足。另外一個答案是，翻譯事業應該正視，需要更多學有專精的人來參與。最後一句話說得重了些，但是實際情況眾所周知。</p>
  <p ALIGN="JUSTIFY">把最好的翻譯品質呈獻給您，是我由衷的希望。如何才叫最好？許多朋友不敢提這樣的字眼 
  -- 
  不論在人生的任何方向。其實，世事能否如願，目標能否達成，本來就受許多因素左右；但是勇敢地把理想定出來吧！理想與實際容或有些許差異，若連「定下目標」的勇氣都沒有，又怎麼去達成目標 
  ?!</p>
  <p ALIGN="JUSTIFY">所以，讓我再說一次，把最好的翻譯品質呈獻給您，是我由衷的希望。<font
  color="#0000FF">讓買了原文書的朋友後悔，是我的第一個目標，讓買了原文書的朋友再掏一次腰包，是我的第二個目標。至於我的第三個目標，呵呵，是讓原文書滯銷（不然做中譯本幹嘛？）</font></p>
  <p ALIGN="JUSTIFY">也有朋友問，在外文書技術與時機的強力優勢下，本土作家是否日益艱難？我要說，技術與商機是一回事，文字與教育是另一回事。從事這種很特殊的文字工作（電腦技術寫作），我的經驗也累積有四、五年了；身兼一個敏銳讀者的身份，我很清楚，一段硬梆梆的技術文字，往往在加了一些適當的連接詞以及起承轉合的字眼之後，能夠整個活轉起來，讓讀者的吸收度由 
  50% 躍升 90%。如果你希望我簡單舉個例子，我沒有辦法。觀者必須多少懂得文字所要傳達的技術，並且比較過用心的作品和不用心的作品，才知畫龍點睛之妙。然而，即使一字一句一行一段地潤飾過了，要讓「全書感覺不出洋味」，仍然算是一句大話，因為原文書的思考邏輯本就是洋人的調子。除非把表達風格整個抽換，而那實在是太大的工程。所以，特有的表達方式與思維方式，是本土作家永不鏽蝕的利器，除非我們自己不善用它。</p>
  <p ALIGN="JUSTIFY">最後，說一個小故事惕勵自己以及所有從事翻譯的朋友。佛家有「一字之差 
  五百世輪迴」的公案 : 
  百丈懷海禪師每次說法，都有一位老者在旁聽道。有一次眾人離去之後，老者向禪師介紹自己，說他原是迦葉尊者時的一名方丈，當時一個學僧問他，道行高的人是否可以了然因果規則，他說「不落因果」。由於說錯了，罰為狐狸身，整整五百世。狐狸化身為老者前來聽道，為的是希望能夠開悟。老禪師問他想知道什麼，老者把學僧的問題再提出來，百丈說「不昧因果」。於是老者開悟，解脫狐狸之身。</p>
  <blockquote>
    <font FACE="標楷體" SIZE="1"><p ALIGN="JUSTIFY"></font></font><font color="#0000FF"
    size="3">百丈和尚凡參次，有一老人常隨眾聽法，眾人退，老人亦退，忽一日不退，師遂問：「面前立者復是何人？」老人云：「某甲非人也，於過去迦葉佛時，曾住此山。因學人問：「大修行底人還落因果也無？」某甲對云：「不落因果！」五百世墜野狐身。今請和尚代轉一語，貴脫野狐！」遂問：「大修行底人還落因果也無？」師曰「不昧因果！」老人遂於言下大悟，作禮云：「某甲已脫野狐身，住在山後，敢告和尚，乞依亡僧事例！」。師令維那白槌告眾：「食後送亡僧！」大眾言議：「一眾皆安，涅槃堂又無人病，何故如是？」食後只見師領眾，至山後巖下，以杖挑出一死野狐，乃依火葬。</font><font
    size="3"></p>
  </blockquote>
  <p ALIGN="JUSTIFY">我懷著戰戰兢兢的心情，不希望做五百世狐狸。</p>
  <p ALIGN="JUSTIFY">　　　　　　　　　　　　　　　　　　　　　<b>侯俊傑</b> 
  1996.04.15</font></p>
  <p ALIGN="JUSTIFY">　</p>
  <p ALIGN="JUSTIFY"><font color="#FF0000"><a name="【目錄】">【目錄】</a><br>
  </font></p>
  <p ALIGN="JUSTIFY">第 0 章 譯者的話<br>
  <br>
  第一篇 基礎觀念 - Windows，Visual C++，Application Framework<br>
  <br>
  第 1 章 Microsoft Windows 與 Visual C++<br>
  第 2 章 MFC 和 Application Framework<br>
  <br>
  第二篇 MFC 中的 View 類別<br>
  <br>
  第 3 章 從 AppWizard 開始 - &quot;Hello World!&quot;<br>
  第 4 章 基本事件處理，映像模式，可捲動的 View<br>
  第 5 章 圖形介面（GDI）、顏色、字形<br>
  第 6 章 Modal 對話盒和 Windows 95 公共控制元件（common controls）<br>
  第 7 章 Modeless 對話盒和 Windows 95 公共對話盒（common controls）<br>
  第 8 章 使用 OLE 控制元件<br>
  第 9 章 Win32 記憶體管理<br>
  第 10 章 Bitmaps<br>
  第 11 章 Windows 訊息處理以及多執行緒程式設計（Multithreaded Programming）<br>
  <br>
  第三篇 Document-View 架構<br>
  <br>
  第 12 章 選單，加速鍵，Rich Edit 控制元件，屬性表（Property Sheet）<br>
  第 13 章 工具列和狀態列<br>
  第 14 章 一個可重複使用的「框架視窗」基礎類別<br>
  第 15 章 從 View 之中分離 Document<br>
  第 16 章 SDI 程式之 Document 讀寫動作<br>
  第 17 章 MDI 程式的 Document 讀寫動作<br>
  第 18 章 列印與列印預視<br>
  第 19 章 分裂視窗與多重顯示<br>
  第 20 章 Context-Sensitive 求助系統<br>
  第 21 章 動態聯結函式庫（DLLs）<br>
  第 22 章 不使用 Documents 或 Views<br>
  <br>
  第四篇 OLE<br>
  <br>
  第 23 章 OLE 的 Component Object Model（COM）<br>
  第 24 章 OLE Automation<br>
  第 25 章 OLE Uniform Data Transfer - 剪貼簿與拖放<br>
  第 26 章 OLE Structured Storage<br>
  第 27 章 OLE 的 Embedded Servers 和 Containers<br>
  <br>
  第五篇 資料庫管理<br>
  <br>
  第 28 章 資料庫管理 - Microsoft ODBC<br>
  第 29 章 資料庫管理 - Microsoft DAO<br>
  <br>
  第六篇 附錄<br>
  <br>
  附錄 A C++ 語言摘要<br>
  附錄 B MFC 的訊息映射函式<br>
  附錄 C MFC 的動態類別與動態生成<br>
  <br>
  索引<br>
  <br>
  &#26;</p>
  <p><a name="【讀者來函】"><font color="#FF0000">【讀者來函】</font></a><br>
  <b><font FACE="華康粗圓體" SIZE="2"></p>
  <p ALIGN="CENTER"></font><font face="華康粗圓體" size="4">四面八方的喝采</font></b><font
  size="4">&nbsp; (for 原文書)</font><font FACE="細明體" size="3"></p>
  </font><font size="3"><p ALIGN="JUSTIFY">Kruglinski <font FACE="細明體">的書已經成為</font>VC++ 
  <font FACE="細明體">的標準教科書了。</font><i>Inside Visual C++ </i><font
  FACE="細明體">值得這樣的聲譽嗎？絕對值得。</font><i><b></p>
  <p ALIGN="RIGHT">…..Visual Basic Programmer's Journal</b></i><font FACE="細明體"></p>
  <p ALIGN="JUSTIFY">這本書是我在攀爬</font> Visual C++ <font FACE="細明體">學習曲線的過程中最常翻閱的一本書。它是我曾經看過的最好的一本程式設計書籍</font>...<font
  FACE="細明體">無論何時當我懷著一個問題打開這本書，我總是（唔，幾乎總是）能夠獲得解答。</font><i><b></p>
  <p ALIGN="RIGHT">…..PC Techniques</b></i><font FACE="細明體"></p>
  <p ALIGN="JUSTIFY">這是一份紮實的著作，非常棒地補充了</font>Visual C++ <font
  FACE="細明體">官方參考手冊。</font><i><b></p>
  <p ALIGN="RIGHT">…..UniSys World</b></p>
  <p ALIGN="JUSTIFY">Inside Visual C++</i> <font FACE="細明體">在探討</font> 
  Document-View <font FACE="細明體">架構時表現得很好，而</font> Document-View<font
  FACE="細明體">是</font> MFC <font FACE="細明體">的基礎，是生手們最常發生困擾的地方。</font><i><b></p>
  <p ALIGN="RIGHT">…..Microsoft Systems Journal</b></i><font FACE="細明體"></p>
  <p ALIGN="JUSTIFY">這本書清晰易讀，在敘述文字、原始碼、螢幕硬拷圖、以及方塊說明之間表現了一個良好的平衡。</font><i><b></p>
  <p ALIGN="RIGHT">…..PC Week</b></i><font FACE="細明體"></p>
  <p ALIGN="JUSTIFY">正如</font> Charles Petzold <font FACE="細明體">的</font> <i>Programming 
  Windows</i> <font FACE="細明體">是為一般的</font> C <font FACE="細明體">程式員所寫，</font>Kruglinski 
  <font FACE="細明體">的</font> <i>Inside Visual C++ </i><font FACE="細明體">是為那些想開發</font> 
  MFC <font FACE="細明體">程式的人而寫。任何一個使用</font> MFC <font
  FACE="細明體">的人都會發現本書很有用，而那些以</font> Visual C++ <font
  FACE="細明體">寫程式的人則能夠獲得最多利益。</font><i><b></p>
  <p ALIGN="RIGHT">…..C/C++ User's Journal</b></i><font FACE="細明體"></p>
  </font><i><p ALIGN="JUSTIFY">Inside Visual C++</i> <font FACE="細明體">是學習</font> 
  MFC <font FACE="細明體">的理想工具。這本書討論</font> MFC <font
  FACE="細明體">的部份，是我所曾看過最好的。</font><i><b></p>
  <p ALIGN="RIGHT">…..Software Development</b></i><font FACE="細明體"></p>
  <p ALIGN="JUSTIFY">如果你打算使用</font> Visual C++<font FACE="細明體">，這本書是必需品。它對</font>Visual 
  C++ <font FACE="細明體">程式員的幫助，一如</font>Charles Petzold <font
  FACE="細明體">的</font> <i>Programming Windows</i><font FACE="細明體">對</font>C<font
  FACE="細明體">程式員的幫助。</font><i><b></p>
  <p ALIGN="RIGHT">…..Computer</b></i></font></p>
</blockquote>

<hr>
</body>
</html>
